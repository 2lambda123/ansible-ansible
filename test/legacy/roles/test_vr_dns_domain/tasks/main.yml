---
- name: setup
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    state: absent
  register: result
- name: verify setup
  assert:
    that:
    - result is success

- name: test fail if missing name
  local_action:
    module: vr_dns_domain
  register: result
  ignore_errors: yes
- name: verify test fail if missing name
  assert:
    that:
    - result is failed
    - 'result.msg == "missing required arguments: name"'

- name: test fail if missing params for state=present
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
  register: result
  ignore_errors: yes
- name: verify fail if missing params for state=present
  assert:
    that:
    - result is failed
    - 'result.msg == "state is present but all of the following are missing: server_ip"'

- name: test create dns domain in check mode
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    server_ip: 10.10.10.10
  register: result
  check_mode: yes
- name: verify test create dns domain in check mode
  assert:
    that:
    - result is changed

- name: test create dns domain
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    server_ip: 10.10.10.10
  register: result
- name: verify test create dns domain
  assert:
    that:
    - result is changed
    - result.vultr_dns_domain.name == '{{ vr_dns_domain_name }}'

- name: test create dns domain idempotence
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    server_ip: 10.10.10.10
  register: result
- name: verify test create dns domain idempotence
  assert:
    that:
    - result is not changed
    - result.vultr_dns_domain.name == '{{ vr_dns_domain_name }}'

- name: test absent dns domain in check mode
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    state: absent
  register: result
  check_mode: yes
- name: verify test absent dns domain in check mode
  assert:
    that:
    - result is changed
    - result.vultr_dns_domain.name == '{{ vr_dns_domain_name }}'

- name: test absent dns domain
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    state: absent
  register: result
- name: verify test absent dns domain
  assert:
    that:
    - result is changed
    - result.vultr_dns_domain.name == '{{ vr_dns_domain_name }}'

- name: test absent dns domain idempotence
  local_action:
    module: vr_dns_domain
    name: "{{ vr_dns_domain_name }}"
    state: absent
  register: result
- name: verify test absent dns domain idempotence
  assert:
    that:
    - result is not changed
