This is a test of various filter plugins found in Ansible (ex: core.py), and 
not so much a test of the core filters in Jinja2.

Dumping the same structure to YAML

{{ some_structure | to_nice_yaml }}

Dumping the same structure to JSON, but don't pretty print

{{ some_structure | to_json(sort_keys=true) }}

Dumping the same structure to YAML, but don't pretty print

{{ some_structure | to_yaml }}

From a recorded task, the changed, failed, success, and skipped
tests are shortcuts to ask if those tasks produced changes, failed,
succeeded, or skipped (as one might guess).

Changed = {{ some_registered_var is changed }}
Failed  = {{ some_registered_var is failed }}
Success = {{ some_registered_var is successful }}
Skipped = {{ some_registered_var is skipped }}

The mandatory filter fails if a variable is not defined and returns the value.
To avoid breaking this test, this variable is already defined.

a = {{ a | mandatory }}

There are various casts available

int = {{ a | int }}
bool = {{ 1 | bool }}

y_bool = {{ 'y' | bool(logic='yaml') }}
yes_bool = {{ 'yes' | bool(logic='yaml') }}
on_bool = {{ 'on' | bool(logic='yaml') }}
str_1_bool = {{ '1' | bool(logic='yaml') }}
int_1_bool = {{ 1 | bool(logic='yaml') }}
float_1_bool = {{ 1.0 | bool(logic='yaml') }}
full_true_bool = {{ 'true' | bool(logic='yaml') }}
t_bool = {{ 't' | bool(logic='yaml') }}

n_bool = {{ 'n' | bool(logic='yaml') }}
no_bool = {{ 'no' | bool(logic='yaml') }}
off_bool = {{ 'off' | bool(logic='yaml') }}
str_0_bool = {{ '0' | bool(logic='yaml') }}
int_0_bool = {{ 0 | bool(logic='yaml') }}
float_0_bool = {{ 0.0 | bool(logic='yaml') }}
full_false_bool = {{ 'false' | bool(logic='yaml') }}
f_bool = {{ 'f' | bool(logic='yaml') }}

String quoting

quoted = {{ 'quoted' | quote }}

The fileglob module returns the list of things matching a pattern.

fileglob = {{ (output_dir + '/*') | fileglob }}

There are also various string operations that work on paths.  These do not require
files to exist and are passthrus to the python os.path functions

/etc/motd with basename = {{ '/etc/motd' | basename }}
/etc/motd with dirname  = {{ '/etc/motd' | dirname }}

TODO: realpath follows symlinks.  There isn't a test for this just now.

TODO: add tests for set theory operations like union

regex_replace = {{ 'foo' | regex_replace('^foo', 'bar') }}
regex_search = {{ 'test_value_0001' | regex_search('([0-9]+)$')}}
regex_findall = "{{ 'car\ntar\nfoo\nbar\n' | regex_findall('^.ar$', multiline=True) }}"
regex_escape = {{ '^f.*o(.*)$' | regex_escape() }}
