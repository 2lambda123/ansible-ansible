# These tasks configure pulp/pulp_ansible so that we can use the container
# They tasks will also reset pulp between iterations

- name: delete pulp distribution
  uri:
    url: '{{ pulp_distribution_href }}'
    method: DELETE
    status_code:
      - 202
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_distribution_delete_task
  when: pulp_distribution_href is defined

- name: wait for distribution delete
  uri:
    url: '{{ pulp_api }}{{ pulp_distribution_delete_task.json.task }}'
    method: GET
    status_code:
      - 200
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_distribution_delete
  until: pulp_distribution_delete is successful
  delay: 1
  retries: 25
  when: pulp_distribution_delete_task is not skipped

- name: delete pulp repository
  uri:
    url: '{{ pulp_repository_href }}'
    method: DELETE
    status_code:
      - 202
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_repository_delete_task
  when: pulp_repository_href is defined

- name: wait for repository delete
  uri:
    url: '{{ pulp_api }}{{ pulp_repository_delete_task.json.task }}'
    method: GET
    status_code:
      - 200
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_repository_delete
  until: pulp_repository_delete is successful
  delay: 1
  retries: 25
  when: pulp_repository_delete_task is not skipped

- name: delete pulp orphans
  uri:
    url: '{{ pulp_api }}/pulp/api/v3/orphans/'
    method: DELETE
    status_code:
      - 202
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_orphans_delete_task
  when: pulp_repository_href is defined

- name: wait for repository delete
  uri:
    url: '{{ pulp_api }}{{ pulp_orphans_delete_task.json.task }}'
    method: GET
    status_code:
      - 200
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_orphans_delete
  until: pulp_orphans_delete is successful
  delay: 1
  retries: 25
  when: pulp_orphans_delete_task is not skipped

- name: create pulp repo
  uri:
    url: '{{ pulp_api }}/pulp/api/v3/repositories/ansible/ansible/'
    method: POST
    body_format: json
    body:
      name: ansible_ci
    status_code:
      - 201
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_repo
  until: pulp_repo is successful
  delay: 1
  retries: 25

- set_fact:
    pulp_repository_href: '{{ pulp_api }}{{ pulp_repo.json.pulp_href }}'
  when: pulp_repo is not skipped

- name: create pulp distribution
  uri:
    url: '{{ pulp_api }}/pulp/api/v3/distributions/ansible/ansible/'
    method: POST
    body_format: json
    body:
      name: ansible_ci
      base_path: ansible_ci
      repository: '{{ pulp_repository_href }}'
    status_code:
      - 202
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  register: pulp_distribution_task

- name: wait for distribution creation
  uri:
    url: '{{ pulp_api }}{{ pulp_distribution_task.json.task }}'
    method: GET
    status_code:
      - 200
    user: '{{ pulp_user }}'
    password: '{{ pulp_password }}'
    force_basic_auth: true
  until: pulp_distribution_task is successful
  delay: 1
  retries: 25
  register: pulp_distribution

- set_fact:
    pulp_distribution_href: '{{ pulp_api }}{{ pulp_distribution.json.created_resources.0 }}'
