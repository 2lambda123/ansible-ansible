---
- name: set facts for test
  set_fact:
    become_test_standard_username: ansible_become_stan
    become_test_admin_username: ansible_become_admin
    sid_test_username: S-1-0-0
    test_util_path: C:\ansible testing
    gen_pw: password123! + {{ lookup('password', '/dev/null chars=ascii_letters,digits length=8') }}

- name: create normal user
  win_user:
    name: '{{ become_test_standard_username }}'
    password: '{{ gen_pw }}'
    update_password: always
    groups: Users
  register: standard_user

- name: create admin user
  win_user:
    name: '{{ become_test_admin_username }}'
    password: '{{ gen_pw }}'
    update_password: always
    groups: Administrators
  register: admin_user

- name: create test sid user
  win_user:
    name: '{{ sid_test_username }}'
    password: '{{ gen_pw }}'
    state: present

- name: create temp testing folder
  win_file:
    path: '{{ test_util_path }}'
    state: directory

- name: download binary that outputs argv to stdout
  win_get_url:
    url: https://s3.amazonaws.com/ansible-ci-files/test/integration/roles/test_win_module_utils/PrintArgv.exe
    dest: '{{ test_util_path }}\PrintArgv.exe'

- block:
  - name: ensure current user is not the become user
    win_whoami:
    register: whoami_out
    failed_when: whoami_out.account.sid in [ standard_user.sid, admin_user.sid ]

  - name: get become user profile dir so we can clean it up later
    vars:
      ansible_become_user: '{{ become_test_standard_username }}'
      ansible_become_password: '{{ gen_pw }}'
      ansible_become_method: runas
      ansible_become: yes
    win_shell: $env:USERPROFILE
    register: standard_profile_dir_out

  - name: ensure standard profile dir contains test username
    assert:
      that:
      - become_test_standard_username in standard_profile_dir_out.stdout_lines[0]

  - name: get become admin user profile dir so we can clean it up later
    vars:
      ansible_become_user: '{{ become_test_admin_username }}'
      ansible_become_password: '{{ gen_pw }}'
      ansible_become_method: runas
      ansible_become: yes
    win_shell: $env:USERPROFILE
    register: admin_profile_dir_out

  - name: ensure admin profile dir contains test username
    assert:
      that:
      - become_test_admin_username in admin_profile_dir_out.stdout_lines[0]

  - name: run tests
    include_tasks: tests.yml

  always:
  - name: ensure standard become user is deleted
    win_user:
      name: '{{ become_test_standard_username }}'
      state: absent

  - name: ensure admin become user is deleted
    win_user:
      name: '{{ become_test_admin_username }}'
      state: absent

  - name: remove test SID user
    win_user:
      name: '{{ sid_test_username }}'
      state: absent

  # FUTURE use win_file once MAX_PATH support is added
  - name: remove testing directory
    win_shell: rmdir /S /Q "{{ test_util_path }}"
    args:
      executable: cmd.exe
      removes: '{{ test_util_path }}'

  - name: ensure standard become user profile is delete
    win_shell: rmdir /S /Q {{ standard_profile_dir_out.stdout_lines[0] }}
    args:
      executable: cmd.exe
    when: become_test_standard_username in standard_profile_dir_out.stdout_lines[0]

  - name: ensure admin become user profile is deleted
    win_shell: rmdir /S /Q {{ admin_profile_dir_out.stdout_lines[0] }}
    args:
      executable: cmd.exe
    when: become_test_admin_username in admin_profile_dir_out.stdout_lines[0]
