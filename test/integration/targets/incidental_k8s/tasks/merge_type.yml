# Kubernetes resources

- block:
    - name: Create a namespace
      k8s:
        name: merge-type
        kind: Namespace

    - name: Create a config map
      k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: test
            namespace: merge-type
          data:
            foo: bar

    - name: patch the config map
      k8s:
        api_version: v1
        kind: ConfigMap
        name: test
        namespace: merge-type
        merge_type: json
        definition:
        - op: replace
          path: /data/foo
          value: foo
      register: patch_config_map

    - name: check config map changed
      assert:
        that:
          - patch_config_map is changed
          - patch_config_map.resource.data.foo == "foo"

    - name: install custom resource definitions
      k8s:
        definition: "{{ lookup('file', role_path + '/files/setup-crd.yml') }}"

    - name: pause 5 seconds to avoid race condition
      pause:
        seconds: 5

    - name: create custom resource definition
      k8s:
        definition: "{{ lookup('file', role_path + '/files/crd-resource.yml') }}"
        namespace: merge-type
        apply: "{{ create_crd_with_apply | default(omit) }}"
      register: create_crd

    - name: patch custom resource definition
      k8s:
        definition: "{{ lookup('file', role_path + '/files/crd-resource.yml') }}"
        namespace: merge-type
      register: recreate_crd
      ignore_errors: yes

    - name: assert that recreating crd is as expected
      assert:
        that:
          - recreate_crd_default_merge_expectation

    - block:
        - name: recreate custom resource definition with merge-type
          k8s:
            definition: "{{ lookup('file', role_path + '/files/crd-resource.yml') }}"
            merge_type: merge
            namespace: merge-type
          register: recreate_crd_with_merge

        - name: recreate custom resource definition with merge_type list
          k8s:
            definition: "{{ lookup('file', role_path + '/files/crd-resource.yml') }}"
            merge_type:
              - strategic-merge
              - merge
            namespace: merge-type
          register: recreate_crd_with_merge_list
      when: recreate_crd is successful


    - name: remove crd
      k8s:
        definition: "{{ lookup('file', role_path + '/files/crd-resource.yml') }}"
        namespace: merge-type
        state: absent


  always:
    - name: remove merge-type namespace
      k8s:
        kind: Namespace
        name: merge-type
        state: absent
      ignore_errors: yes
