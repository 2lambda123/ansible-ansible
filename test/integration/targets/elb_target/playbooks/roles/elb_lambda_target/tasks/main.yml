---
- name: set up lambda as elb_target

  block:
    - name: Get the current caller identity facts
      aws_caller_facts:
      register: caller_facts

    - name: create zip to deploy lambda code
      archive:
        path: "ansible_lambda_target.py"
        dest: /tmp/lambda.zip
        format: zip

    - name: "create or update service-role SwitchECSInstance"
      iam_role:
        name: ansible_lambda_execution
        region: eu-central-1
        assume_role_policy_document: "{{ lookup('file','assume-role.json') }}"
        managed_policy:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

    - name: deploy lambda.zip to ansible_lambda_target function
      lambda:
        name: "ansible_lambda_target"
        state: present
        region: eu-central-1
        zip_file: "/tmp/lambda.zip"
        runtime: "python3.7"
        role: "arn:aws:iam::{{ caller_facts.account }}:role/Invoke_Lambda_to_update_sg"
        handler: "ansible_lambda_target.lambda_handler"
        timeout: 30
      register: lambda_function

    - name: create empty target group
      elb_target_group:
        name: ansible-lambda-targetgroup
        region: eu-central-1
        target_type: lambda
        state: present
        modify_targets: False
      register: elb_target_group

    - name: tg is created, state must be changed
      assert:
        that:
          - elb_target_group.changed

    - name: allow elb to invoke the lambda function
      lambda_policy:
        state: present
        region: eu-central-1
        function_name: ansible_lambda_target
        statement_id: someID
        action: lambda:InvokeFunction
        principal: elasticloadbalancing.amazonaws.com
        source_arn: "{{ elb_target_group.target_group_arn }}"

    - name: add lambda to elb target
      elb_target_group:
        name: ansible-lambda-targetgroup
        region: eu-central-1
        target_type: lambda
        state: present
        targets:
          - Id: "{{ lambda_function.function_arn }}"

    - name: target is updated, state must be changed
      assert:
        that:
          - elb_target_group.changed

    - name: re-add lambda to elb target (idempotency)
      elb_target_group:
        name: ansible-lambda-targetgroup
        region: eu-central-1
        target_type: lambda
        state: present
        targets:
          - Id: "{{ lambda_function.function_arn }}"

    - name: target is still the same, state must not be changed (idempotency)
      assert:
        that:
          - not elb_target_group.changed

  always:
    - name: remove elb target group
      elb_target_group:
        name: ansible-lambda-targetgroup
        state: absent

    - name: remove lambda function
      lambda:
        name: ansible_lambda_target
        state: absent

    - name: remove iam role for lambda
      iam_role:
        name: ansible_lambda_execution
        state: absent
