######################
### check mode add ###
######################
- name: check mode ADD audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: check_mode_add_filesystem
  check_mode: yes

- name: check mode ADD audit policy registry
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: check_mode_add_registry
  check_mode: yes

- name: check mode ADD get FILESYSTEM results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: check_mode_add_filesystem_results

- name: check mode ADD get REGISTRY results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: check_mode_add_registry_results

- name: check mode ADD assert that a change is needed, but no change occurred to the audit rules
  assert:
    that:
    - check_mode_add_filesystem | changed
    - check_mode_add_registry | changed
    - not check_mode_add_filesystem_results.matching_rule_found
    - not check_mode_add_registry_results.matching_rule_found

##################
### add a rule ###
##################
- name: add audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_filesystem

- name: add audit policy registry
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_registry

- name: add get FILESYSTEM results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_filesystem_results

- name: add get REGISTRY results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_registry_results

- name: ADD assert that the rules were added and a change is detected
  assert:
    that:
    - add_filesystem | changed
    - add_registry | changed
    - add_filesystem_results.matching_rule_found
    - add_registry_results.matching_rule_found

#############################
### idempotent add a rule ###
#############################
- name: idempotent ADD audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_filesystem_idempotent

- name: idempotent ADD audit policy registry idempotent
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: add_registry_idempotent

- name: idempotent ADD assert that a change did not occur
  assert:
    that:
    - not add_filesystem_idempotent | changed
    - not add_registry_idempotent | changed

#########################
### modify check mode ###
#########################
- name: check mode modify audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_modify_filesystem
  check_mode: yes

- name: check mode modify audit policy registry
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_modify_registry
  check_mode: yes

- name: check mode modify get FILESYSTEM rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_modify_filesystem_results

- name: check mode modify get REGISTRY rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_modify_registry_results

- name: check mode modify assert that change is needed but rights still equal the original rights and not test_audit_rule_new_rights
  assert:
    that:
    - cm_modify_filesystem | changed
    - cm_modify_registry | changed
    - not cm_modify_filesystem_results.matching_rule_found
    - not cm_modify_registry_results.matching_rule_found

##############
### modify ###
##############
- name: modify audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: modify_filesystem

- name: modify audit policy registry
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: modify_registry

- name: modify get FILESYSTEM rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: modify_filesystem_results

- name: modify get REGISTRY rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: modify_registry_results

- name: modify assert that the rules were modified and a change is detected
  assert:
    that:
    - modify_filesystem | changed
    - modify_registry | changed
    - modify_filesystem_results.matching_rule_found
    - modify_registry_results.matching_rule_found

#####################################
### idempotent test modify a rule ###
#####################################
- name: idempotent modify audit policy filesystem
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: idem_modify_filesystem

- name: idempotent modify audit policy registry
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: idem_modify_registry

- name: idempotent modify assert that and a change is not detected
  assert:
    that:
    - not idem_modify_filesystem | changed
    - not idem_modify_registry | changed

################################
### check mode remove a rule ###
################################
- name: check mode remove filesystem rule
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: cm_rm_filesystem
  check_mode: yes

- name: check mode remove registry rule
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: cm_rm_registry
  check_mode: yes

- name: check mode remove get FILESYSTEM rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_rm_filesystem_results

- name: check mode remove get REGISTRY rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: cm_rm_registry_results

- name: check mode remove assert that change detected, but rule is still present
  assert:
    that:
    - cm_rm_filesystem | changed
    - cm_rm_registry | changed
    - cm_rm_filesystem_results.matching_rule_found
    - cm_rm_registry_results.matching_rule_found

#####################
### remove a rule ###
#####################
- name: remove filesystem rule
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: rm_filesystem

- name: remove registry rule
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: rm_registry

- name: remove get FILESYSTEM rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: rm_filesystem_results

- name: remove get REGISTRY rule results
  test_get_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    rights: "{{ test_audit_rule_new_rights }}"
    state: present
    audit_flags: "{{ test_audit_rule_audit_flags }}"
  register: rm_registry_results

- name: remove assert that change detected and rule is gone
  assert:
    that:
    - rm_filesystem | changed
    - rm_registry | changed
    - not rm_filesystem_results.matching_rule_found
    - not rm_registry_results.matching_rule_found

#####################
### idempotent remove a rule ###
#####################
- name: idempotent remove filesystem rule
  win_audit_rule:
    path: "{{ test_audit_rule_folder }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: idem_rm_filesystem

- name: idempotent remove registry rule
  win_audit_rule:
    path: "{{ test_audit_rule_registry }}"
    identity_reference: "{{ test_audit_rule_identity_reference }}"
    state: absent
  register: idem_rm_registry

- name: idempotent remove assert that no change detected
  assert:
    that:
    - not idem_rm_filesystem | changed
    - not idem_rm_registry | changed
