# Copyright: (c) 2019, Andrew Klychkov (@Andersson007) <aaklychkov@mail.ru>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- vars:
    task_parameters: &task_parameters
      become_user: '{{ pg_user }}'
      become: yes
      register: result
    pg_parameters: &pg_parameters
      login_user: '{{ pg_user }}'
      login_db: '{{ test_db }}'

  block:
#  - name: Create subscription via shell
#    <<: *task_parameters
#    shell: psql '{{ test_db }}' -p '{{ replica_port }}' -c "CREATE SUBSCRIPTION {{ test_subscription }} CONNECTION 'host=127.0.0.1 port={{ master_port }} user={{ replication_role }} password={{ replication_pass }} dbname={{ test_db }}' PUBLICATION {{ test_pub }};"

  ####################
  # Test mode: present
  ####################
  - name: Create subscription
    <<: *task_parameters
    postgresql_subscription:
      <<: *pg_parameters
      login_port: '{{ replica_port }}'
      name: '{{ test_subscription }}'
      state: present
      pubname: '{{ test_pub }}'
      connparams:
        host: 127.0.0.1
        port: '{{ master_port }}'
        user: '{{ replication_role }}'
        password: '{{ replication_pass }}'
        dbname: '{{ test_db }}'

  #################
  # Test mode: stat
  #################

  - name: Stat mode in check mode
    <<: *task_parameters
    postgresql_subscription: 
      <<: *pg_parameters
      login_port: '{{ replica_port }}'
      name: '{{ test_subscription }}'
      state: stat
    check_mode: yes

  - assert:
      that:
      - result is not changed
      - result.initial_state != {}
      - result.final_state == result.initial_state

  - name: Stat mode
    <<: *task_parameters
    postgresql_subscription: 
      <<: *pg_parameters
      login_port: '{{ replica_port }}'
      name: '{{ test_subscription }}'
      state: stat

  - assert:
      that:
      - result is not changed
      - result.initial_state != {}
      - result.final_state == result.initial_state
