---
- debug: msg="START connection={{ ansible_connection }} nxos_telemetry sensorgroup sanity test"
- debug: msg="Using provider={{ connection.transport }}"
  when: ansible_connection == "local"

- name: Setup
  nxos_feature: &setup_teardown
    feature: telemetry
    provider: "{{ connection }}"
    state: disabled
  ignore_errors: yes

- block:
  - name: Telemetry sensorgroup - merged
    nxos_telemetry: &tms_sensorgroup_merged
      state: 'merged'
      config:
        sensor_groups:
          - { id: 2, data_source: NX-API, path: {name: sys/bgp, depth: 0, query_condition: foo, filter_condition: foo}}
          - { id: 2, data_source: NX-API, path: {name: sys/bgp/inst, depth: unbounded, query_condition: foo, filter_condition: foo}}
          - { id: 55, data_source: DME, path: {name: 'sys/bgp/inst/dom-default/peer-[10.10.10.11]/ent-[10.10.10.11]', depth: 0, query_condition: foo, filter_condition: foo}}
          - { id: 55, data_source: DME, path: {name: sys/ospf, depth: 0, query_condition: foo, filter_condition: 'or(eq(ethpmPhysIf.operSt,"down"),eq(ethpmPhysIf.operSt,"up"))'}}
      provider: "{{ connection }}"
    register: result

  - assert: &true
      that:
        - "result.changed == true"

  - name: Telemetry sensorgroup - merged - idempotence
    nxos_telemetry: *tms_sensorgroup_merged
    register: result

  - assert: &false
      that:
        - "result.changed == false"

  - name: Telemetry sensorgroup - deleted
    nxos_telemetry: &tms_sensorgroup_deleted
      state: 'deleted'
      config:
        sensor_groups:
          - { id: 2, data_source: NX-API, path: {name: sys/bgp, depth: 0, query_condition: foo, filter_condition: foo}}
          - { id: 2, data_source: NX-API, path: {name: sys/bgp/inst, depth: unbounded, query_condition: foo, filter_condition: foo}}
          - { id: 55, data_source: DME, path: {name: 'sys/bgp/inst/dom-default/peer-[10.10.10.11]/ent-[10.10.10.11]', depth: 0, query_condition: foo, filter_condition: foo}}
          - { id: 55, data_source: DME, path: {name: sys/ospf, depth: 0, query_condition: foo, filter_condition: 'or(eq(ethpmPhysIf.operSt,"down"),eq(ethpmPhysIf.operSt,"up"))'}}
      provider: "{{ connection }}"
    register: result

  - assert: *true

  - name: Telemetry sensorgroup - deleted - idempotence
    nxos_telemetry: *tms_sensorgroup_deleted
    register: result

  - assert: *false

  always:
  - name: Teardown
    nxos_feature: *setup_teardown
    ignore_errors: yes

  - debug: msg="END connection={{ ansible_connection }} nxos_telemetry sensorgroup sanity test"
