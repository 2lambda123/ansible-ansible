# test code for the assemble module
# (c) 2014, James Cammarata <jcammarata@ansible.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: create a new directory for file source
  file: dest="{{output_dir}}/src" state=directory
  register: result

- name: assert the directory was created
  assert:
    that:
    - "result.state == 'directory'"

- name: copy the files to a new directory
  copy: src="./" dest="{{output_dir}}/src"
  register: result

- name: create unicode file for test
  shell: echo "π" > {{ output_dir }}/src/ßΩ.txt
  register: result

- name: assert that the new file was created
  assert:
    that:
    - "result.changed == true"

- name: test assemble with all fragments (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled1"
  check_mode: True
  diff: True
  register: result

- assert:
    that:
    - "result.changed == True"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == ''"  # File doesn't exist yet
    - "result.diff[0].before == ''"
    - "result.diff[0].after_header == output_dir + '/assembled1 (content)'"
    - "result.diff[0].after == after"
  vars:
    after: "this is fragment 1\nthis is fragment 2\nthis is fragment 3\nthis is fragment 4\nthis is fragment 5\nπ\n"

- name: test assemble with all fragments
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled1"
  register: result

- name: assert the fragments were assembled
  assert:
    that:
    - "result.state == 'file'"
    - "result.changed == True"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test assemble with all fragments (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled1"
  check_mode: True
  diff: True
  register: result

- name: assert that the same assemble reports no changes (check mode)
  assert:
    that:
    - "result.changed == False"
    - "not result.diff"

- name: test assemble with all fragments
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled1"
  register: result

- name: assert that the same assemble made no changes
  assert:
    that:
    - "result.state == 'file'"
    - "result.changed == False"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test assemble with all fragments and decrypt=True (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled2" decrypt=yes
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled with decrypt=True
  assert:
    that:
    - "result.changed == True"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == ''"
    - "result.diff[0].before == ''"
    - "result.diff[0].after_header == output_dir + '/assembled2 (content)'"
    - "result.diff[0].after == after"
  vars:
    after: "this is fragment 1\nthis is fragment 2\nthis is fragment 3\nthis is fragment 4\nthis is fragment 5\nπ\n"

- name: test assemble with all fragments and decrypt=True
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled2" decrypt=yes
  register: result

- name: assert the fragments were assembled with decrypt=True
  assert:
    that:
    - "result.state == 'file'"
    - "result.changed == True"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test assemble with all fragments and decrypt=True (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled2" decrypt=yes
  register: result
  check_mode: True
  diff: True

- name: assert that the same assemble reports no changes with decrypt=True (check mode)
  assert:
    that:
    - "result.changed == False"
    - "not result.diff"

- name: test assemble with all fragments and decrypt=True
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled2" decrypt=yes
  register: result

- name: assert that the same assemble made no changes with decrypt=True
  assert:
    that:
    - "result.state == 'file'"
    - "result.changed == False"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test assemble with fragments matching a regex (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled3" regexp="^fragment[1-3]$"
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled with a regex (check mode)
  assert:
    that:
    - "result.checksum == 'edfe2d7487ef8f5ebc0f1c4dc57ba7b70a7b8e2b'"
    - "result.changed == True"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == ''"
    - "result.diff[0].before == ''"
    - "result.diff[0].after_header == output_dir + '/assembled3 (content)'"
    - "result.diff[0].after == after"
  vars:
    after: "this is fragment 1\nthis is fragment 2\nthis is fragment 3\n"

- name: test assemble with fragments matching a regex
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled3" regexp="^fragment[1-3]$"
  register: result

- name: assert the fragments were assembled with a regex
  assert:
    that:
    - "result.changed == True"
    - "result.state == 'file'"
    - "result.checksum == 'edfe2d7487ef8f5ebc0f1c4dc57ba7b70a7b8e2b'"

- name: test assemble with fragments matching a regex and decrypt=True
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled4" regexp="^fragment[1-3]$" decrypt=yes
  register: result

- name: assert the fragments were assembled with a regex and decrypt=True
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == 'edfe2d7487ef8f5ebc0f1c4dc57ba7b70a7b8e2b'"

- name: test assemble with a delimiter
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled5" delimiter="#--- delimiter ---#"
  register: result

- name: assert the fragments were assembled with a delimiter
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == 'd986cefb82e34e4cf14d33a3cda132ff45aa2980'"

- name: test assemble with a delimiter and decrypt=True
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled6" delimiter="#--- delimiter ---#" decrypt=yes
  register: result

- name: assert the fragments were assembled with a delimiter and decrypt=True
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == 'd986cefb82e34e4cf14d33a3cda132ff45aa2980'"

- set_fact:
    before_mode: "{{ result['mode'] }}"

- name: test modifying mode (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled6" delimiter="#--- delimiter ---#" decrypt=yes mode=0000
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled with a delimiter and decrypt=True
  assert:
    that:
    - "result.changed"
    - "result.checksum == 'd986cefb82e34e4cf14d33a3cda132ff45aa2980'"
    - "result.diff | length == 1"
    - "result.diff[0].before['mode'] == before_mode"
    - "result.diff[0].after['mode'] == '0000'"

- name: modify a src file to test updating the dest
  copy:
    dest: "{{ output_dir }}/src/a"
    content: "New fragment"

- name: test assemble with changed fragments (check mode)
  assemble: src="{{output_dir}}/src" dest="{{output_dir}}/assembled6" delimiter="#--- delimiter ---#" decrypt=yes
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled with a delimiter and decrypt=True
  assert:
    that:
    - "result.changed"
    - "result.state == 'file'"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == result.diff[0].after_header == file_header"
    - "result.diff[0].before == before + '\n'"
    - "result.diff[0].after == after + '\n'"
  vars:
    file_header: "{{ output_dir }}/assembled6 (content)"
    before: |-
            this is fragment 1
            #--- delimiter ---#
            this is fragment 2
            #--- delimiter ---#
            this is fragment 3
            #--- delimiter ---#
            this is fragment 4
            #--- delimiter ---#
            this is fragment 5
            #--- delimiter ---#
            π
    after: "{{ 'New fragment\n#--- delimiter ---#\n' + before }}"

- name: test assemble with remote_src=False (check mode)
  assemble: src="./" dest="{{output_dir}}/assembled7" remote_src=no
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "result.changed == True"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == ''"  # The file doesn't exist yet
    - "result.diff[0].before == ''"
    - "result.diff[0].after_header == output_dir + '/assembled7 (content)'"
    - "result.diff[0].after == after"
  vars:
    after: "this is fragment 1\nthis is fragment 2\nthis is fragment 3\nthis is fragment 4\nthis is fragment 5\n"

- name: test assemble with remote_src=False
  assemble: src="./" dest="{{output_dir}}/assembled7" remote_src=no
  register: result

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "result.changed"
    - "result.state == 'file'"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"

- name: test idempotency using assemble with remote_src=False
  assemble: src="./" dest="{{output_dir}}/assembled7" remote_src=no
  register: result

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "not result.changed"
    - "result.state == 'file'"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"

- name: test assemble with remote_src=False (check mode)
  assemble: src="./" dest="{{output_dir}}/assembled7" remote_src=no
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "result.changed == False"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"
    - "not result.diff"

# FIXME: the assemble action plugin does not report diff changes for changing file attrs

# - set_fact:
#     before_mode: "{{ result.mode }}"

# - name: test assemble with remote_src=False with a new mode (check mode)
#   assemble: src="./" dest="{{output_dir}}/assembled7" remote_src=no mode=0000
#   register: result
#   check_mode: True
#   diff: True

# - name: assert the fragments were assembled without remote
#   assert:
#     that:
#     - "result.changed"
#     - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"
#     - "result.diff | length == 1"
#     - "result.diff[0].before_header == result.diff[0].after_header == file_header"
#     - "result.diff[0].before['mode'] == before_mode"
#     - "result.diff[0].after['mode'] == '0000'"
#   vars:
#     file_header: "{{ output_dir }}/assembled7 (content)"

- name: test assemble with remote_src=False and decrypt=True (check mode)
  assemble: src="./" dest="{{output_dir}}/assembled8" remote_src=no decrypt=yes
  register: result
  check_mode: True
  diff: True

- name: assert the fragments were assembled without remote and decrypt=True
  assert:
    that:
    - "result.changed"
    - "result.diff | length == 1"
    - "result.diff[0].before_header == ''"
    - "result.diff[0].before == ''"
    - "result.diff[0].after_header == output_dir + '/assembled8 (content)'"
    - "result.diff[0].after == after"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"
  vars:
    after: "this is fragment 1\nthis is fragment 2\nthis is fragment 3\nthis is fragment 4\nthis is fragment 5\n"

- name: test assemble with remote_src=False and decrypt=True
  assemble: src="./" dest="{{output_dir}}/assembled8" remote_src=no decrypt=yes
  register: result

- name: assert the fragments were assembled without remote and decrypt=True
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"

- name: test assemble with remote_src=False and a delimiter
  assemble: src="./" dest="{{output_dir}}/assembled9" remote_src=no delimiter="#--- delimiter ---#"
  register: result

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == '505359f48c65b3904127cf62b912991d4da7ed6d'"

- name: test assemble with remote_src=False and a delimiter and decrypt=True
  assemble: src="./" dest="{{output_dir}}/assembled10" remote_src=no delimiter="#--- delimiter ---#" decrypt=yes
  register: result

- name: assert the fragments were assembled without remote
  assert:
    that:
    - "result.state == 'file'"
    - "result.checksum == '505359f48c65b3904127cf62b912991d4da7ed6d'"
