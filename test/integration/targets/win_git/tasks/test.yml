---
- name: fail cloning the repo using ssh
  block:
    - name: clone the ssh repo 
      win_git:
        repo: 'git@github.com:{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_ssh"
      register: fail_clone
      ignore_errors: yes

- name: assert repo cloned failed using ssh
  assert:
    that:            
      - fail_clone is not changed

- name: clone repo using http (check)
  block:
    - name: clone the http repo (check)
      win_git:
        repo: 'https://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_http"
      register: http_clone_check
      check_mode: yes

- name: assert repo cloned using http (check)
  assert:
    that:      
      - http_clone_check is not changed    

- name: clone repo using http
  block:
    - name: Get stats of existing directory for http clone      
      win_stat:
       path: "{{ temp_path }}\\repo_http"
      register: http_clone_path
    
    - name: remove any existing directory for http clone    
      win_file:
       name: "{{ temp_path }}\\repo_http"
       state: absent
      when:  http_clone_path.stat.exists

    - name: clone the http repo
      win_git:
        repo: 'https://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_http"
      register: http_clone      

- name: assert repo cloned using http 
  assert:
    that:      
      - http_clone is changed      
      - "'Failed to clone' not in http_clone.git_msg"

- name: clone repo using git protocol
  block:
    - name: clone the git repo
      win_git:
        repo: 'git://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_git"
      register: git_clone

- name: assert repo cloned using git protocol
  assert:
    that:    
      - git_clone is changed        
      - "'Failed to clone' not in git_clone.git_msg"

- name: clone repo using a branch
  block:
    - name: clone the repo using branch
      win_git:
        repo: 'https://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_branch"
        version: '{{ github_repo_branch }}'
      register: http_clone_branch      

- name: assert repo cloned using branch
  assert:
    that:      
      - http_clone_branch is changed     
      - "'Successfully cloned' in http_clone_branch.git_msg"      
      
- name: update the repo using master branch 
  block:
    - name: update the repo
      win_git:
        repo: 'https://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_branch"
        version: 'master'
        update: yes
      register: http_update      

- name: assert repo updated using master
  assert:
    that:      
      - http_update is changed     
      - "'Successfully updated' in http_update.git_msg"
      
- name: clean the destination before cloning
  block:
    - name: clean the repo
      win_git:
        repo: 'https://github.com/{{ github_repo_name }}'
        dest: "{{ temp_path }}\\repo_http"
        version: 'tags/{{ github_repo_tag }}'
        relace_dest: true
      register: http_clean

- name: assert clean repo cloned
  assert:
    that:
      - http_clean is changed      
