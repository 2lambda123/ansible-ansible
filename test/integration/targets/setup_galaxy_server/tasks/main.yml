---
- name: set fact of collection directory
  set_fact:
    galaxy_dir: '{{ remote_tmp_dir }}/galaxy'

- name: create test galaxy directory
  file:
    path: '{{ galaxy_dir }}/collections'
    state: directory

- name: copy across fake galaxy server files
  copy:
    src: files/
    dest: '{{ galaxy_dir }}'

- name: template falaxy config file
  template:
    src: galaxy.ini.j2
    dest: '{{ galaxy_dir }}/galaxy.ini'

- name: install dependencies
  pip:
    requirements: '{{ galaxy_dir }}/requirements.txt'
    extra_args: -c "{{ remote_constraints }}"

- name: startup fake Galaxy server
  command: "'{{ ansible_python_interpreter }}' galaxy.py"
  args:
    chdir: '{{ galaxy_dir }}'
  notify: stop falaxy server
  async: 600
  poll: 0

- name: wait for falaxy to come online
  wait_for:
    port: '{{ galaxy_port }}'
    state: started

- name: get pid of falaxy server
  slurp:
    path: '{{ galaxy_dir }}/galaxy.pid'
  register: falaxy_pid
