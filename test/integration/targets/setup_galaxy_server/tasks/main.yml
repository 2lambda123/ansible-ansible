---
- name: create test galaxy directory
  file:
    path: '{{ remote_tmp_dir }}/galaxy/collections'
    state: directory

- name: copy across fake galaxy server files
  copy:
    src: files/
    dest: '{{ remote_tmp_dir }}/galaxy'

- name: template falaxy config file
  template:
    src: galaxy.ini.j2
    dest: '{{ remote_tmp_dir }}/galaxy/galaxy.ini'

- name: install dependencies
  pip:
    requirements: '{{ remote_tmp_dir }}/galaxy/requirements.txt'
    extra_args: -c "{{ remote_constraints }}"

- name: startup fake Galaxy server
  command: "'{{ ansible_python_interpreter }}' galaxy.py"
  args:
    chdir: '{{ remote_tmp_dir }}/galaxy'
  notify: stop falaxy server
  async: 120
  poll: 0

- name: wait for falaxy to come online
  wait_for:
    port: '{{ galaxy_port }}'
    state: started

- name: get pid of falaxy server
  slurp:
    path: '{{ remote_tmp_dir }}/galaxy/galaxy.pid'
  register: falaxy_pid
