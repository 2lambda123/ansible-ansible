# Test code for the vmware_guest_register_operation module
# Copyright: (c) 2019, sky-joker <sky.jokerxx@gmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- import_role:
    name: prepare_vmware_tests
  vars:
    setup_attach_host: true
    setup_datastore: true
    setup_cluster: true
    setup_virtualmachines: true

- name: get a list of Resource pools from vcsim
  uri:
    url: http://{{ vcenter_hostname }}:5000/govc_find?filter=RP
  register: resource_pools

- name: get a resource pool
  set_fact: resource_pool="{{ resource_pools['json'][2].split('/').7 }}"

- name: get a vm name
  set_fact: vm_name="DC0_H0_VM0"

- block:
  - name: gather facts of vm
    vmware_guest_facts:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: False
      datacenter: "{{ dc1 }}"
      folder: "{{ f0 }}"
      name: "{{ vm_name }}"
    register: vm_facts
    
  - name: get a vm vmx file path
    set_fact: vm_vmx_file_path="{{ vm_facts.instance.hw_files[0] }}"

- name: Powered off the vm
  vmware_guest_powerstate:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: False
    folder: /vm
    name: "{{ vm_name }}"
    state: powered-off

- name: Unregister VM from inventory
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    name: "{{ vm_name }}"
    state: absent

- name: Register VM to inventory
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    esxi_hostname: "{{ esxi1 }}"
    name: "{{ vm_name }}"
    path: "{{ vm_vmx_file_path }}"
    state: present

- name: Unregister VM from inventory
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    name: "{{ vm_name }}"
    state: absent

- name: Register VM in Cluster
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    cluster: "{{ ccr1 }}"
    name: "{{ vm_name }}"
    path: "{{ vm_vmx_file_path }}"
    state: present

- name: Unregister VM from inventory
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    name: "{{ vm_name }}"
    state: absent

- name: Register VM in Resource pool
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    resource_pool: "{{ resource_pool }}"
    name: "{{ vm_name }}"
    path: "{{ vm_vmx_file_path }}"
    state: present

- block:
  - name: gather facts of vm
    vmware_guest_facts:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: False
      datacenter: "{{ dc1 }}"
      folder: "{{ f0 }}"
      name: "{{ vm_name }}"
    register: vm_facts

  - name: get a vm uuid
    set_fact: vm_uuid="{{ vm_facts.instance.hw_product_uuid }}"

- name: Unregister VM from inventory with uuid parameter
  vmware_guest_register_operation:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    datacenter: "{{ dc1 }}"
    folder: "/vm"
    name: "{{ vm_name }}"
    uuid: "{{ vm_uuid }}"
    state: absent
