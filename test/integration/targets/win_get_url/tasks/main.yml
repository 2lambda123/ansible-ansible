---
- name: ensure testing folder is present
  win_file:
    path: '{{ item }}'
    state: directory
  loop:
    - '{{ test_win_get_url_path }}'
    - '{{ remote_tmp_dir }}'

- name: copy across testing files
  win_copy:
    src: files/
    dest: '{{test_win_get_url_path}}\'

- name: download SlimFTPd binary
  win_get_url:
    url: https://s3.amazonaws.com/ansible-ci-files/test/integration/roles/test_win_get_url/SlimFTPd.exe
    dest: '{{test_win_get_url_path}}\SlimFTPd.exe'

- name: template SlimFTPd configuration file
  win_template:
    src: slimftpd.conf.tmpl
    dest: '{{test_win_get_url_path}}\slimftpd.conf'

- name: create SlimFTPd service
  win_service:
    name: SlimFTPd
    path: '"{{test_win_get_url_path}}\SlimFTPd.exe" -service'
    state: started
    dependencies:
    - tcpip

- name: install python
  win_chocolatey:
    name: python
    skip_scripts: True
  register: installed_python
  until: installed_python is succeeded

- name: start simple http.server
  win_command: python -m http.server {{ http_port }}
  args:
    chdir: '{{ test_win_get_url_path }}'
  async: 90
  poll: 0

- name: create env var for win_get_url tests
  win_environment:
    name: '{{test_win_get_url_env_var}}'
    level: machine
    value: '{{test_win_get_url_path}}'
    state: present

- block:
  - name: run URL tests
    include_tasks: tests_url.yml

  - name: run FTP tests
    include_tasks: tests_ftp.yml

  - name: run checksum tests
    include_tasks: tests_checksum.yml

  always:
  - name: remove SlimFTPd service
    win_service:
      name: SlimFTPd
      state: absent

  - name: remove test env var for tests
    win_environment:
      name: '{{test_win_get_url_env_var}}'
      level: machine
      state: absent

  - name: stop simple http.server
    win_command: powershell.exe -
    args:
      stdin: >-
        Stop-Process -Name "python" -Force -ErrorAction SilentlyContinue
    register: stop_http_server
    failed_when:
      - stop_http_server.rc not in [0, 1]
    ignore_errors: yes

  - name: remove testing folders
    win_file:
      path: '{{ item }}'
      state: absent
    loop:
      - '{{ test_win_get_url_path }}'
      - '{{ remote_tmp_dir }}'
