---

- block:

    - name: set connection information for all tasks
      set_fact:
        aws_connection_info: &aws_connection_info
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          security_token: "{{ security_token }}"
          region: "{{ aws_region }}"
      no_log: yes

    # ============================================================

    - name: create a VPC to test in
      ec2_vpc_net:
        cidr_block: 10.0.0.0/24
        name: '{{ setup_vpc_name }}'
        resource_tags:
          Name: '{{ setup_vpc_name }}'
        <<: *aws_connection_info
      register: setup_vpc

    # ============================================================

    - name: test failure if zone is missing
      route53_zone:
      register: result
      ignore_errors: true

    - name: assert failure if zone is missing
      assert:
        that:
          - result.failed
          - "result.msg == 'missing required arguments: zone'"

    # ============================================================

    - name: 'create a public hosted zone (expect: changed=True)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        comment: '{{ zone_comment }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert creation of public hosted zone (expect: changed=True)'
      assert:
        that:
          - result.changed
          - 'result.name == "{{ zone_domain_name | lower }}."'
          - result.comment == '{{ zone_comment }}'
          - not result.private_zone
          - result.zone_id

    - set_fact:
        public_zone_id: '{{ result.zone_id  }}'

    # ============================================================

    - name: 'create a public hosted zone (expect: changed=False)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        comment: '{{ zone_comment }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert creation of public hosted zone (expect: changed=False)'
      assert:
        that:
          - not result.changed
          - result.zone_id == public_zone_id

    # ============================================================

    - name: 'delete public hosted zone (expect: changed=True)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of public hosted zone (expect: changed=True)'
      assert:
        that:
          - result.changed
          - '"{{ result.result }}" == "Successfully deleted {{ zone_domain_name | lower }}."'

    # ============================================================

    - name: 'delete public hosted zone (expect: changed=False)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of public hosted zone (expect: changed=False)'
      assert:
        that:
          - not result.changed
          - "result.result == 'No zone to delete.'"

    # ============================================================

    - name: 'create a private hosted zone (expect: changed=True)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        comment: '{{ zone_comment }}'
        vpc_id: '{{ setup_vpc.vpc.id }}'
        vpc_region: '{{ aws_region }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert creation of private hosted zone (expect: changed=True)'
      assert:
        that:
          - result.changed
          - '"{{ result.name }}" == "{{ zone_domain_name | lower }}."'
          - result.comment == '{{ zone_comment }}'
          - result.private_zone
          - result.zone_id

    - set_fact:
        private_zone_id: '{{ result.zone_id }}'

    # ============================================================

    - name: 'create a private hosted zone (expect: changed=False)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        comment: '{{ zone_comment }}'
        vpc_id: '{{ setup_vpc.vpc.id }}'
        vpc_region: '{{ aws_region }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert creation of private hosted zone (expect: changed=False)'
      assert:
        that:
          - not result.changed
          - result.zone_id == private_zone_id

    # ============================================================

    - name: 'delete private hosted zone (expect: changed=True)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        vpc_id: '{{ setup_vpc.vpc.id }}'
        vpc_region: '{{ aws_region }}'
        state: absent
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of private hosted zone (expect: changed=True)'
      assert:
        that:
          - result.changed
          - '"{{ result.result }}" == "Successfully deleted {{ zone_domain_name | lower }}."'

    # ============================================================

    - name: 'delete private hosted zone (expect: changed=False)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of private hosted zone (expect: changed=False)'
      assert:
        that:
          - not result.changed
          - "result.result == 'No zone to delete.'"

    # ============================================================

    # Test hosted_zone_id option

    - name: 'create a public hosted zone'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        comment: '{{ zone_comment }}'
        <<: *aws_connection_info
      register: hosted_zone

    - name: 'delete hosted zone using hosted_zone_id (expect: changed=True)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        hosted_zone_id: '{{ hosted_zone.zone_id }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of hosted zone (expect: changed=True)'
      assert:
        that:
          - result.changed
          - '"{{ result.result }}" == "Successfully deleted zone: {{ hosted_zone.zone_id }}"'

    - name: 'delete hosted zone using hosted_zone_id (expect: changed=False)'
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        hosted_zone_id: '{{ hosted_zone.zone_id }}'
        <<: *aws_connection_info
      register: result

    - name: 'assert deletion of hosted zone (expect: changed=False)'
      assert:
        that:
          - not result.changed
          - "result.result == 'No zone to delete.'"
    # ============================================================

    # hosted_zone_id can also be used to distinguish between multiple matching zones
    # but testing that would require us to have the ability to create multiple hosted zones
    # with the same domain name

    # ============================================================

  always:

    - name: cleanup hosted zones
      route53_zone:
        zone: '{{ zone_domain_name }}'
        state: absent
        <<: *aws_connection_info
      ignore_errors: True

    - name: remove setup VPC
      ec2_vpc_net:
        cidr_block: 10.0.0.0/24
        state: absent
        name: '{{ setup_vpc_name }}'
        <<: *aws_connection_info
