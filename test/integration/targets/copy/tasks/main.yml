- block:
    - name: Create a local working directory
      file:
        path: '{{ role_path }}/tmp/'
        state: directory
      connection: local

    - name: create remote unprivileged remote user
      user:
        name: '{{ remote_unprivileged_user }}'
      register: user

    - file:
        path: "{{ user.home }}/.ssh"
        owner: '{{ remote_unprivileged_user }}'
        state: directory
        mode: 0700

    - name: 'duplicate authorized_keys'
      copy:
        src: $HOME/.ssh/authorized_keys
        dest: '{{ user.home }}/.ssh/authorized_keys'
        owner: '{{ remote_unprivileged_user }}'
        mode: 0600
        remote_src: yes

    - file:
        path: "{{ output_dir }}"
        state: directory
      remote_user: '{{ remote_unprivileged_user }}'

    # execute tests tasks using an unprivileged user, this is useful to avoid
    # local/remote ambiguity when controller and managed hosts are identical.
    - import_tasks: tests.yml
      remote_user: '{{ remote_unprivileged_user }}'

  always:
    - name: Cleaning
      file:
        path: '{{ role_path }}/tmp/'
        state: absent
      connection: local

    - name: remote unprivileged remote user
      user:
        name: '{{ remote_unprivileged_user }}'
        state: absent
        remove: yes
