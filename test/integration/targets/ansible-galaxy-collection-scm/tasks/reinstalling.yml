- name: Rerun installing a collection with a dep
  command: 'ansible-galaxy collection install git+file://{{ test_repo_path }}/.git#/collection_1/'
  register: installed

- name: assert the virtual dependency is already installed with an identical version
  assert:
    that:
      - >
        "'ansible_test.collection_1:1.0.0' is already installed, skipping." in installed.stdout
      - >
        "'ansible_test.collection_2:1.0.0' is already installed, skipping." in installed.stdout

- name: Force reinstalling a collection
  command: 'ansible-galaxy collection install git+file://{{ test_repo_path }}/.git#/collection_1/ --force'
  register: installed

- name: assert only the direct request was resinstalled with --force
  assert:
    that:
      - "'Created collection for ansible_test.collection_1' in installed.stdout"
      - >
        "'ansible_test.collection_2:1.0.0' is already installed, skipping." in installed.stdout

- name: Force reinstalling a collection and its dependency
  command: 'ansible-galaxy collection install git+file://{{ test_repo_path }}/.git#/collection_1/ --force-with-deps'
  register: installed

- name: assert the SCM collection and its dependency was reinstalled
  assert:
    that:
      - "'Created collection for ansible_test.collection_1' in installed.stdout"
      - "'Created collection for ansible_test.collection_2' in installed.stdout"

- name: Install a different version of the collection without --force
  command: 'ansible-galaxy collection install git+file://{{ test_repo_path }}/.git#/collection_1/,v0.0.9'
  register: installed

- name: assert the collection was reinstalled
  assert:
    that:
      - "'Created collection for ansible_test.collection_1' in installed.stdout"

- include_tasks: ./empty_installed_collections.yml
  when: cleanup
