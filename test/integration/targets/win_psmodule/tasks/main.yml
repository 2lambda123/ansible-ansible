# test code for the win_psmodule module when using winrm connection
# (c) 2017, Daniele Lazzari <lazzari@mailup.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: install module from Powershell Gallery
  win_psmodule:
    name: "{{ powershell_module }}"
    state: present
  register: module_setup

- name: check idempotency reinstalling module
  win_psmodule:
    name: "{{ powershell_module }}"
    state: present
  register: module_reinstall

- name: check module install with allow_clobber not active
  win_psmodule:
    name: "{{ allow_clobber_module }}"
  register: fail_allow_clobber
  ignore_errors: yes

- name: check module install with allow_clobber active
  win_psmodule:
    name: "{{ allow_clobber_module }}"
    allow_clobber: yes
  register: ok_allow_clobber

- name: check wrong module install attempt
  win_psmodule: 
    name: "{{ wrong_module }}"
    state: present
  ignore_errors: yes
  register: module_fail

- name: check fake custom ps repository registration attempt
  win_psmodule:
    name: "{{ wrong_module }}"
    repository: Fake repository
    url: http://my_fake_repo.com/repo/
  ignore_errors: yes
  register: repo_fail

- name: check module is installed
  win_shell: (Get-Module -Name {{ powershell_module }} -ListAvailable).Name
  register: module_check

- name: check allow_clobber module is installed
  win_shell: (Get-Module -Name {{ allow_clobber_module }} -ListAvailable).Name
  register: allow_clobber_check

- name: test win_psmodule module setup
  assert:
    that:
      - "module_setup|changed"
      - "module_setup.output == 'Module {{ powershell_module }} installed'"
      - "not module_reinstall|changed"
      - "fail_allow_clobber|failed"
      - "ok_allow_clobber|changed"
      - "module_fail|failed"
      - "repo_fail|failed"
      - "module_check.stdout_lines[0] == '{{ powershell_module }}'"
      - "allow_clobber_check.stdout_lines[0] == '{{ allow_clobber_module }}'"

- name: remove installed powershell module
  win_psmodule:
    name: powershell-yaml
    state: absent
  register: module_uninstall

- name: check module is uninstalled
  win_shell: (Get-Module -Name {{ powershell_module }} -ListAvailable).Name
  register: module_check

- name: check idempotency re-removing module
  win_psmodule:
    name: "{{ powershell_module }}"
    state: absent
  register: module_uninstall_2

- name: check removing allow_clobber module
  win_psmodule:
    name: "{{ allow_clobber_module }}"
    state: absent
  register: module_uninstall_3

- name: test win_psmodule module uninstall
  assert:
    that:
      - "module_uninstall|changed"
      - "module_uninstall.output == 'Module {{ powershell_module }} removed'"
      - "module_check.stdout == ''"
      - "not module_uninstall_2|changed"
      - "module_uninstall_3|changed"
      