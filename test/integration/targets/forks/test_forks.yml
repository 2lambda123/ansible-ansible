---
- hosts: localhosts
  gather_facts: false
  vars:
    forksdir: ~/ansible_testing/forks.dir/
  tasks:
    - name: Clean forksdir '{{ forksdir }}'
      file:
        state: absent
        path: '{{ forksdir }}'
      ignore_errors: yes
      run_once: yes
    - name: Create forksdir '{{ forksdir }}'
      file:
        state: directory
        path: '{{ forksdir }}'
      run_once: yes
    - block:
      - name: "Test 1 (max forks: 3)"
        command: "{{ ansible_python_interpreter }}"
        args:
          stdin: |
            import os, time
            forksdir ='{{ forksdir | expanduser }}1/'
            forksfile = forksdir + '{{ inventory_hostname }}'
            max_forks = 3
            try:
              os.mkdir(forksdir)
            except OSError:
              pass
            try:
              with(open(forksfile, 'a')):
                os.utime(forksfile, None)
              time.sleep(0.5)
              forkslist = os.listdir(forksdir)
              print("tasks: %d/%d" % (len(forkslist), max_forks))
              if len(forkslist) > max_forks:
                raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
              time.sleep(0.5)
            finally:
              os.unlink(forksfile)
        #run_once: true
      forks: 3
    - block:
      - name: "Test 2 (max forks: 5)"
        command: "{{ ansible_python_interpreter }}"
        args:
          stdin: |
            import os, time
            forksdir ='{{ forksdir | expanduser }}2/'
            forksfile = forksdir + '{{ inventory_hostname }}'
            max_forks = 5
            try:
              os.mkdir(forksdir)
            except OSError:
              pass
            try:
              with(open(forksfile, 'a')):
                os.utime(forksfile, None)
              time.sleep(0.5)
              forkslist = os.listdir(forksdir)
              print("tasks: %d/%d" % (len(forkslist), max_forks))
              if len(forkslist) > max_forks:
                raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
              time.sleep(0.5)
            finally:
              os.unlink(forksfile)
        forks: 5
      - block:
        - name: "Test 3 (max forks: 6)"
          command: "{{ ansible_python_interpreter }}"
          args:
            stdin: |
              import os, time
              forksdir ='{{ forksdir | expanduser }}3/'
              forksfile = forksdir + '{{ inventory_hostname }}'
              max_forks = 6
              try:
                os.mkdir(forksdir)
              except OSError:
                pass
              try:
                with(open(forksfile, 'a')):
                  os.utime(forksfile, None)
                time.sleep(0.5)
                forkslist = os.listdir(forksdir)
                print("tasks: %d/%d" % (len(forkslist), max_forks))
                if len(forkslist) > max_forks:
                  raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
                time.sleep(0.5)
              finally:
                os.unlink(forksfile)
          forks: 8
        forks: 6
      - block:
        - block:
          - name: "Test 4 (max forks: 8)"
            command: "{{ ansible_python_interpreter }}"
            args:
              stdin: |
                import os, time
                forksdir ='{{ forksdir | expanduser }}4/'
                forksfile = forksdir + '{{ inventory_hostname }}'
                max_forks = 8
                try:
                  os.mkdir(forksdir)
                except OSError:
                  pass
                try:
                  with(open(forksfile, 'a')):
                    os.utime(forksfile, None)
                  time.sleep(0.5)
                  forkslist = os.listdir(forksdir)
                  print("tasks: %d/%d" % (len(forkslist), max_forks))
                  if len(forkslist) > max_forks:
                    raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
                  time.sleep(0.5)
                finally:
                  os.unlink(forksfile)
            forks: 10
          forks: 8
        forks: 12
      forks: 15
    - block:
      - name: "Test 1 (max forks: 3)"
        command: "{{ ansible_python_interpreter }}"
        args:
          stdin: |
            import os, time
            forksdir ='{{ forksdir | expanduser }}5/'
            forksfile = forksdir + '{{ inventory_hostname }}'
            max_forks = 3
            try:
              os.mkdir(forksdir)
            except OSError:
              pass
            try:
              with(open(forksfile, 'a')):
                os.utime(forksfile, None)
              time.sleep(0.5)
              forkslist = os.listdir(forksdir)
              print("tasks: %d/%d" % (len(forkslist), max_forks))
              if len(forkslist) > max_forks:
                raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
              time.sleep(0.5)
            finally:
              os.unlink(forksfile)
        #run_once: true
      forks: 3
    - block:
      - name: "Test 2 (max forks: 5)"
        command: "{{ ansible_python_interpreter }}"
        args:
          stdin: |
            import os, time
            forksdir ='{{ forksdir | expanduser }}6/'
            forksfile = forksdir + '{{ inventory_hostname }}'
            max_forks = 5
            try:
              os.mkdir(forksdir)
            except OSError:
              pass
            try:
              with(open(forksfile, 'a')):
                os.utime(forksfile, None)
              time.sleep(0.5)
              forkslist = os.listdir(forksdir)
              print("tasks: %d/%d" % (len(forkslist), max_forks))
              if len(forkslist) > max_forks:
                raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
              time.sleep(0.5)
            finally:
              os.unlink(forksfile)
        forks: 5
      - block:
        - name: "Test 3 (max forks: 6)"
          command: "{{ ansible_python_interpreter }}"
          args:
            stdin: |
              import os, time
              forksdir ='{{ forksdir | expanduser }}7/'
              forksfile = forksdir + '{{ inventory_hostname }}'
              max_forks = 6
              try:
                os.mkdir(forksdir)
              except OSError:
                pass
              try:
                with(open(forksfile, 'a')):
                  os.utime(forksfile, None)
                time.sleep(0.5)
                forkslist = os.listdir(forksdir)
                print("tasks: %d/%d" % (len(forkslist), max_forks))
                if len(forkslist) > max_forks:
                  raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
                time.sleep(0.5)
              finally:
                os.unlink(forksfile)
          forks: 8
        forks: 6
      - block:
        - block:
          - name: "Test 4 (max forks: 8)"
            command: "{{ ansible_python_interpreter }}"
            args:
              stdin: |
                import os, time
                forksdir ='{{ forksdir | expanduser }}8/'
                forksfile = forksdir + '{{ inventory_hostname }}'
                max_forks = 8
                try:
                  os.mkdir(forksdir)
                except OSError:
                  pass
                try:
                  with(open(forksfile, 'a')):
                    os.utime(forksfile, None)
                  time.sleep(0.5)
                  forkslist = os.listdir(forksdir)
                  print("tasks: %d/%d" % (len(forkslist), max_forks))
                  if len(forkslist) > max_forks:
                    raise ValueError("Too many concurrent tasks: %d/%d" % (len(forkslist), max_forks))
                  time.sleep(0.5)
                finally:
                  os.unlink(forksfile)
            forks: 10
          forks: 8
        forks: 12
      forks: 15
