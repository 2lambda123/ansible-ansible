- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall
- name: start vcsim with no folders
  uri:
    url: http://{{ vcsim }}:5000/spawn?datacenter=1&cluster=1&folder=0
  register: vcsim_instance

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of VMS from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=VM
  register: vmlist

- debug: var=vcsim_instance
- debug: var=vmlist

- name: Create a VM with one disk controller
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    folder: "/{{ (clusterlist['json'][0]|basename).split('_')[0] }}/vm"
    name: one_ctl_test
    datacenter: "{{ (clusterlist['json'][0]|basename).split('_')[0] }}"
    cluster: "{{ clusterlist['json'][0]|basename }}"
    resource_pool: Resources
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
      scsi: paravirtual
    disk:
    - size_mb: 128
      type: thin
      datastore: LocalDS_0
  register: one_scsi_disk_vm

- debug: var=one_scsi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
        - "one_scsi_disk_vm.failed == false"
        - "one_scsi_disk_vm.changed == true"

- name: create a new VM with multiple scsi controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    folder: "/{{ (clusterlist['json'][0]|basename).split('_')[0] }}/vm"
    name: multi_ctl_test
    datacenter: "{{ (clusterlist['json'][0]|basename).split('_')[0] }}"
    cluster: "{{ clusterlist['json'][0]|basename }}"
    resource_pool: Resources
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
    disk:
    - controller_type: lsilogicsas
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: LocalDS_0
    - controller_type: paravirtual
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: lsilogicsas
      controller_number: 2
      unit_number: 1
      size_mb: 256
    - controller_type: paravirtual
      controller_number: 3
      unit_number: 0
      size_mb: 256

  register: multi_scsi_disk_vm

- debug: var=multi_scsi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
        - "multi_scsi_disk_vm.failed == false"
        - "multi_scsi_disk_vm.changed == true"

- name: create a new VM with multiple sata controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    folder: "/{{ (clusterlist['json'][0]|basename).split('_')[0] }}/vm"
    name: multi_ctl_test
    datacenter: "{{ (clusterlist['json'][0]|basename).split('_')[0] }}"
    cluster: "{{ clusterlist['json'][0]|basename }}"
    resource_pool: Resources
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
    disk:
    - controller_type: sata
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: LocalDS_0
    - controller_type: sata
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: sata
      controller_number: 2
      unit_number: 0
      size_mb: 256
    - controller_type: sata
      controller_number: 3
      unit_number: 0
      size_mb: 256

  register: multi_sata_disk_vm

- debug: var=multi_sata_disk_vm

- name: assert that VM was deployed
  assert:
    that:
        - "multi_sata_disk_vm.failed == false"
        - "multi_sata_disk_vm.changed == true"

- name: create a new VM with multiple disk controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    folder: "/{{ (clusterlist['json'][0]|basename).split('_')[0] }}/vm"
    name: multi_ctl_test
    datacenter: "{{ (clusterlist['json'][0]|basename).split('_')[0] }}"
    cluster: "{{ clusterlist['json'][0]|basename }}"
    resource_pool: Resources
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
    disk:
    - controller_type: lsilogicsas
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: LocalDS_0
    - controller_type: paravirtual
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: sata
      controller_number: 0
      unit_number: 1
      size_mb: 256
    - controller_type: paravirtual
      controller_number: 1
      unit_number: 1
      size_mb: 256

  register: multi_disk_vm

- debug: var=multi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
        - "multi_disk_vm.failed == false"
        - "multi_disk_vm.changed == true"
