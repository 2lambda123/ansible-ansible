# Test code for the vmware_guest module.
# Copyright: (c) 2019, Diane Wang <dianew@vmware.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Create a VM with one disk controller
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    folder: "{{ f0 }}"
    name: test_vm1
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
      scsi: paravirtual
    disk:
    - size_mb: 128
      type: thin
      datastore: "{{ ds2 }}"
  register: one_scsi_disk_vm

- debug: var=one_scsi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
      - "one_scsi_disk_vm.changed == true"

- name: create a new VM with multiple scsi controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    folder: "{{ f0 }}"
    name: test_vm2
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
    disk:
    - controller_type: lsilogicsas
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: "{{ ds2 }}"
    - controller_type: paravirtual
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
  register: multi_scsi_disk_vm

- debug: var=multi_scsi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
      - "multi_scsi_disk_vm.changed == true"

- name: create a new VM with multiple sata controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    folder: "{{ f0 }}"
    name: test_vm3
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
    disk:
    - controller_type: sata
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: "{{ ds2 }}"
    - controller_type: sata
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: sata
      controller_number: 2
      unit_number: 0
      size_mb: 256
  register: multi_sata_disk_vm

- debug: var=multi_sata_disk_vm

- name: assert that VM was deployed
  assert:
    that:
      - "multi_sata_disk_vm.changed == true"

- name: create a new VM with multiple nvme controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    folder: "{{ f0 }}"
    name: test_vm4
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
      version: 13
    disk:
    - controller_type: nvme
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: "{{ ds2 }}"
    - controller_type: nvme
      controller_number: 1
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: nvme
      controller_number: 2
      unit_number: 0
      size_mb: 256
  register: multi_nvme_disk_vm

- debug: var=multi_nvme_disk_vm

- name: assert that VM was deployed
  assert:
    that:
      - "multi_nvme_disk_vm.changed == true"

- name: create a new VM with multiple type of disk controllers
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    folder: "{{ f0 }}"
    name: test_vm5
    guest_id: centos64Guest
    hardware:
      memory_mb: 512
      num_cpus: 1
      version: 13
    disk:
    - controller_type: lsilogicsas
      controller_number: 0
      unit_number: 0
      boot_disk: true
      size_mb: 512
      datastore: "{{ ds2 }}"
    - controller_type: nvme
      controller_number: 0
      unit_number: 0
      size_mb: 256
      type: thin
    - controller_type: sata
      controller_number: 0
      unit_number: 0
      size_mb: 256
  register: multi_disk_vm

- debug: var=multi_disk_vm

- name: assert that VM was deployed
  assert:
    that:
      - "multi_disk_vm.changed == true"