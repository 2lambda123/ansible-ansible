---
- debug: msg="START cli/configure.yaml"

- set_fact: nxapi_sandbox_option="yes"
  when: platform is search('N7K')

- name: Setup - put NXAPI in stopped state
  nxos_nxapi:
    state: absent

- block:
  - name: Configure NXAPI HTTPS
    nxos_nxapi: &configure_https
      enable_http: no
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      enable_https: yes
      https_port: 9443
    register: result

  - nxos_command:
      commands:
        - show nxapi | json
    register: result

  - include: targets/nxos_nxapi/tasks/platform/n7k/assert_changes_https.yaml
    when: platform is match('N7K')

  - include: targets/nxos_nxapi/tasks/platform/n5k/assert_changes_https.yaml
    when: platform is match('N5K')

  - include: targets/nxos_nxapi/tasks/platform/default/assert_changes_https.yaml
    when: not ( platform is search('N7K')) and not (platform is search('N5K')) and not (platform is search('N35'))

  - name: Configure NXAPI HTTPS again
    nxos_nxapi: *configure_https
    register: result

  - name: Assert configuration is idempotent
    assert: &assert_false
      that:
        - result.changed == false

  - name: Configure NXAPI HTTPS & HTTP
    nxos_nxapi: &configure_https_http
      enable_http: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      enable_https: yes
      https_port: 9443
    register: result

  - nxos_command:
      commands:
        - show nxapi | json
    register: result

  - include: targets/nxos_nxapi/tasks/platform/n7k/assert_changes_https_http.yaml
    when: platform is match('N7K')

  - include: targets/nxos_nxapi/tasks/platform/n5k/assert_changes_https_http.yaml
    when: platform is match('N5K')

  - include: targets/nxos_nxapi/tasks/platform/default/assert_changes_https_http.yaml
    when: not ( platform is search('N7K')) and not (platform is search('N5K')) and not (platform is search('N35'))

  - name: Configure NXAPI HTTPS & HTTP again
    nxos_nxapi: *configure_https_http
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure different NXAPI HTTPS & HTTP ports
    nxos_nxapi: &configure_https_http_ports
      enable_http: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      enable_https: yes
      http_port: 99
      https_port: 500
    register: result

  - nxos_command:
      commands:
        - show nxapi | json
    register: result

  - include: targets/nxos_nxapi/tasks/platform/n7k/assert_changes_https_http_ports.yaml
    when: platform is match('N7K')

  - include: targets/nxos_nxapi/tasks/platform/n5k/assert_changes_https_http_ports.yaml
    when: platform is match('N5K')

  - include: targets/nxos_nxapi/tasks/platform/default/assert_changes_https_http_ports.yaml
    when: not ( platform is search('N7K')) and not (platform is search('N5K')) and not (platform is search('N35'))

  - name: Configure different NXAPI HTTPS & HTTP ports again
    nxos_nxapi: *configure_https_http_ports
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTP
    nxos_nxapi: &configure_http
      enable_http: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      enable_https: no
    register: result

  - nxos_command:
      commands:
        - show nxapi | json
    register: result

  - include: targets/nxos_nxapi/tasks/platform/n7k/assert_changes_http.yaml
    when: platform is match('N7K')

  - include: targets/nxos_nxapi/tasks/platform/n5k/assert_changes_http.yaml
    when: platform is match('N5K')

  - include: targets/nxos_nxapi/tasks/platform/default/assert_changes_http.yaml
    when: not ( platform is search('N7K')) and not (platform is search('N5K')) and not (platform is search('N35'))

  - name: Configure NXAPI HTTP again
    nxos_nxapi: *configure_http
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTPs w/weak ciphers
    nxos_nxapi: &configure_https_weak_ciphers
      enable_https: yes 
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      ssl_strong_ciphers: no
    register: result

  - nxos_command:
      commands:
        - show run all | inc nxapi | inc ciphers
    register: result

  - name: Assert weak ciphers configuration
    assert: &weak_ciphers
      that:
         - result.stdout_lines[0][0] == 'nxapi ssl ciphers weak'
    when: platform is match('N9K') and major_version is version('9.2', '>=')

  - name: Configure NXAPI HTTP w/weak ciphers again
    nxos_nxapi: *configure_https_weak_ciphers
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTPs w/strong ciphers
    nxos_nxapi: &configure_https_strong_ciphers
      enable_https: yes 
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      ssl_strong_ciphers: yes
    register: result

  - nxos_command:
      commands:
        - show run all | inc nxapi | inc ciphers
    register: result

  - name: Assert strong ciphers configuration
    assert: &strong_ciphers
      that:
         - result.stdout_lines[0][0] == 'no nxapi ssl ciphers weak'
    when: platform is match('N9K') and major_version is version('9.2', '>=')

  - name: Configure NXAPI HTTPs w/strong ciphers again
    nxos_nxapi: *configure_https_strong_ciphers
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTPs w/default
    nxos_nxapi: &configure_https_default
      enable_https: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
    register: result

  - nxos_command:
      commands:
        - show run all | inc nxapi | inc protocols
    register: result

  - name: Assert NXAPI HTTPs w/default configuration
    assert: &default_configuration
      that:
         - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1'
    when: platform is match('N9K') and major_version is version('9.2', '>=')

  - name: Configure NXAPI HTTPs w/default again
    nxos_nxapi: *configure_https_default
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTPs w/TLS1.2 +default
    nxos_nxapi: &configure_https_tlsv1_2_default
      enable_https: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      ssl_strong_ciphers: yes
      tlsv1_2: yes
    register: result

  - nxos_command:
      commands:
        - show run all | inc nxapi | inc protocols
    register: result

  - name: Assert NXAPI HTTPs w/TLS1.2 +default configuration
    assert: &tlsv1_2_default_configuration
      that:
         - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1 TLSv1.2'
    when: platform is match('N9K') and major_version is version('9.2', '>=')

  - name: Configure NXAPI HTTPs w/TLS1.2 again
    nxos_nxapi: *configure_https_tlsv1_2_default
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 -default
    nxos_nxapi: &configure_https_tlsv1_2_tlsv1_1
      enable_https: yes
      enable_sandbox: "{{nxapi_sandbox_option|default(omit)}}"
      ssl_strong_ciphers: yes
      tlsv1_0: no
      tlsv1_1: yes
      tlsv1_2: yes
    register: result

  - nxos_command:
      commands:
        - show run all | inc nxapi | inc protocols
    register: result

  - name: Assert NXAPI HTTPs w/TLS1.2 TLS1.2 -default configuration
    assert: &tlsv1_2_tlsv1_1_configuration
      that:
         - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1.1 TLSv1.2'
    when: platform is match('N9K') and major_version is version('9.2', '>=')

  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 -default again
    nxos_nxapi: *configure_https_tlsv1_2_tlsv1_1
    register: result

  - name: Assert configuration is idempotent
    assert: *assert_false

  always:
  - name: Cleanup - Disable NXAPI
    nxos_nxapi:
      state: absent
    register: result

  - name: Cleanup - Re-enable NXAPI
    nxos_nxapi:
      state: present
    register: result

  - debug: msg="END cli/configure.yaml"
