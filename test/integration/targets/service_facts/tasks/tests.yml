- name: start the ansible test service
  service:
    name: ansible_test
    enabled: yes
    state: started
  register: enable_result

- name: assert that the service was enabled and changes reported
  assert:
    that:
      - "enable_result.enabled == true"
      - "enable_result is changed"

- name: disable the ansible test service
  service:
    name: ansible_test
    state: stopped
    enabled: no
  register: start_result

- name: assert that the service was stopped
  assert:
    that:
      - "start_result.state == 'stopped'"
      - "start_result is changed"

- name: Populate service facts
  service_facts:

- name: get ansible_test service's state
  debug:
    var: services['ansible_test.service'].state

- name: ansible_test service's running state should be \"dead\"
  assert:
    that: "services['ansible_test.service'].state == 'dead'"

- name: failed-test service running state should be \"failed\"
  assert:
    that: "services['failed-test.service'].state == 'failed'"

- name: Get states as systemd sees them
  command: systemctl list-units --no-pager --type service --all --plain --no-legend
  register: systemctl_list_units_out

- name:  Check on each systemd service with each item from service_facts
  assert:
    that:
      - "services[item.split()[0]].state == item.split()[3]"
      - "services[item.split()[0]].status == item.split()[2]"
  loop: "{{systemctl_list_units_out.stdout.split('\n') | list}}"
