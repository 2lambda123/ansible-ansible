- name: Install Python requirements
  pip:
    state: present 
    name: "{{ item }}"
  with_items:
    - docker>=2.1.0

- include: RedHat.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora'

- include: Fedora.yml 
  when: ansible_distribution == 'Fedora'

- include: OpenSuse.yml
  when: ansible_os_family == 'Suse'

- include: Ubuntu.yml
  when: ansible_os_family == 'Debian'

- name: Check if already in swarm
  shell: docker node ls 2>&1 | grep 'docker swarm init'
  register: output
  ignore_errors: yes 

- name: Enable swarm mode
  command: docker swarm init
  when: output.rc == 0

- name: Parameter name should be required
  docker_secret:
    state: present
  ignore_errors: yes
  register: output

- name: assert failure when called with no name
  assert:
    that:
       - 'output.failed'
       - 'output.msg == "missing required arguments: name"'

- name: Test parameters
  docker_secret:
    name: foo
    state: present
  ignore_errors: yes
  register: output

- name: assert failure when called with no data
  assert:
    that:
       - 'output.failed'
       - 'output.msg == "state is present but the following are missing: data"'

- name: Create secret
  docker_secret:
    name: db_password
    data: opensesame!
    state: present
  register: output

- name: Create variable secret_id 
  set_fact:
    secret_id: "{{ output.secret_id.ID }}"

- name: Inspect secret
  command: docker secret inspect db_password 
  register: inspect

- name: assert secret creation succeeded
  assert:
    that:
       - "'db_password' in inspect.stdout"
       - "'ansible_key' in inspect.stdout"

- name: Create secret again
  docker_secret:
    name: db_password
    data: opensesame!
    state: present
  register: output

- name: assert create secret is idempotent
  assert:
    that:
       - not output.changed

- name: Update secret
  docker_secret:
    name: db_password
    data: newpassword!
    state: present
  register: output

- name: assert secret was updated
  assert:
    that:
       - output.changed
       - output.secret_id.ID != secret_id

- name: Disable swarm mode
  command: docker swarm leave --force
