- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: yes

- name: Create instance of PostgreSQL Server -- check mode
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    sku:
      name: PGSQLS100
      tier: basic
    location: westus
    storage_mb: 51200
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  check_mode: yes
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    sku:
      name: PGSQLS100
      tier: basic
    location: westus
    storage_mb: 51200
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed
      - output.state == 'Ready'

- name: Create again instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    sku:
      name: PGSQLS100
      tier: basic
    location: westus
    storage_mb: 51200
    enforce_ssl: True
    admin_username: zimxyz
    admin_password: Testpasswordxyz12!
  register: output
- name: Assert the state has not changed
  assert:
    that:
      - output.changed == false
      - output.state == 'Ready'

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
    server_name: postgresqlsrv{{ rpfx }}
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers.postgresqlsrv{{ rpfx }}.id != None
      - output.servers.postgresqlsrv{{ rpfx }}.name != None
      - output.servers.postgresqlsrv{{ rpfx }}.type != None
      - output.servers.postgresqlsrv{{ rpfx }}.location != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.name != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.tier != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.capacity != None
      - output.servers.postgresqlsrv{{ rpfx }}.version != None
      - output.servers.postgresqlsrv{{ rpfx }}.user_visible_state != None
      - output.servers.postgresqlsrv{{ rpfx }}.fully_qualified_domain_name != None

- name: Gather facts MySQL Server
  azure_rm_postgresqlserver_facts:
    resource_group: "{{ resource_group }}"
  register: output
- name: Assert that facts are returned
  assert:
    that:
      - output.changed == False
      - output.servers.postgresqlsrv{{ rpfx }}.id != None
      - output.servers.postgresqlsrv{{ rpfx }}.name != None
      - output.servers.postgresqlsrv{{ rpfx }}.type != None
      - output.servers.postgresqlsrv{{ rpfx }}.location != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.name != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.tier != None
      - output.servers.postgresqlsrv{{ rpfx }}.sku.capacity != None
      - output.servers.postgresqlsrv{{ rpfx }}.version != None
      - output.servers.postgresqlsrv{{ rpfx }}.user_visible_state != None
      - output.servers.postgresqlsrv{{ rpfx }}.fully_qualified_domain_name != None
      - output.servers.postgresqlsrv{{ rpfx }}second.id != None
      - output.servers.postgresqlsrv{{ rpfx }}second.name != None
      - output.servers.postgresqlsrv{{ rpfx }}second.type != None
      - output.servers.postgresqlsrv{{ rpfx }}second.location != None
      - output.servers.postgresqlsrv{{ rpfx }}second.sku.name != None
      - output.servers.postgresqlsrv{{ rpfx }}second.sku.tier != None
      - output.servers.postgresqlsrv{{ rpfx }}second.sku.capacity != None
      - output.servers.postgresqlsrv{{ rpfx }}second.version != None
      - output.servers.postgresqlsrv{{ rpfx }}second.user_visible_state != None
      - output.servers.postgresqlsrv{{ rpfx }}second.fully_qualified_domain_name != None

- name: Delete instance of PostgreSQL Server -- check mode
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    state: absent
  check_mode: yes
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete unexisting instance of PostgreSQL Server
  azure_rm_postgresqlserver:
    resource_group: "{{ resource_group }}"
    name: postgresqlsrv{{ rpfx }}
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed == false
