# Test code for the vmware_folder_info module.
# Copyright: (c) 2019, David Hewitt (@davidmhewitt) <davidmhewitt@gmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall

- name: start vcsim
  uri:
    url: http://{{ vcsim }}:5000/spawn?datacenter=1&cluster=1&folder=1
  register: vcsim_instance

- name: Wait for vcsim server to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of Datacenter from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=DC
  register: datacenters

- set_fact: dc1="{{ datacenters['json'][0] }}"

- name: create example toplevel folder
  vcenter_folder:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: "{{ dc1 | basename }}"
    folder_name: "toplevel"

- name: create an example child folder
  vcenter_folder:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: "{{ dc1 | basename }}"
    folder_name: "child_folder"
    parent_folder: "toplevel"    

# Testcase 0001: Get details about folders
- name: get info about folders
  vmware_folder_info:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: "{{ dc1 | basename }}"
  register: folder_info_0001

- debug: var=folder_info_0001

- assert:
    that:
      - "folder_info_0001['folder_info'] is defined"
      - "folder_info_0001['folder_info']['datastoreFolders'] is defined"
      - "folder_info_0001['folder_info']['hostFolders'] is defined"
      - "folder_info_0001['folder_info']['vmFolders'] is defined"
      - "folder_info_0001['folder_info']['networkFolders'] is defined"
      - "folder_info_0001['folder_info']['datastoreFolders']['path'] == \"/{{ dc1 | basename }}/datastore\""
      - "folder_info_0001['folder_info']['hostFolders']['path'] == \"/{{ dc1 | basename }}/host\""
      - "folder_info_0001['folder_info']['vmFolders']['path'] == \"/{{ dc1 | basename }}/vm\""
      - "folder_info_0001['folder_info']['networkFolders']['path'] == \"/{{ dc1 | basename }}/network\""
      - "folder_info_0001['folder_info']['vmFolders']['subfolders']['toplevel'] is defined"
      - "folder_info_0001['folder_info']['vmFolders']['subfolders']['toplevel']['path'] == \"/{{ dc1 | basename }}/vm/toplevel\""
      - "folder_info_0001['folder_info']['vmFolders']['subfolders']['toplevel']['subfolders']['child_folder'] is defined"
      - "folder_info_0001['folder_info']['vmFolders']['subfolders']['toplevel']['subfolders']['child_folder']['path'] == \"/{{ dc1 | basename }}/vm/toplevel/child_folder\""
