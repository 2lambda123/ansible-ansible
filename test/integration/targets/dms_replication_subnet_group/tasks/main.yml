---

- name: set connection information for all tasks
  set_fact:
    aws_connection_info: &aws_connection_info
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
    resource_prefix: "test_dms_sg"
    dms_sg_identifier: "{{ resource_prefix }}-dms"
  no_log: no

- block:
    - name: Create VPC for use in testing
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        tags:
          Name: Ansible ec2_instance Testing VPC
        tenancy: default
      register: testing_vpc

    - name: create subnet1
      ec2_vpc_subnet:
        state: present
        vpc_id:  "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.16/28
        az: eu-west-1a
      register: subnet1

    - name: create subnet2
      ec2_vpc_subnet:
        state: present
        vpc_id:  "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.32/28
        az: eu-west-1c
      register: subnet2

    - name: create replication subnet subnet group
      dms_replication_subnet_group:
        state: present
        subnetgroupidentifier: "dev-sngroup"
        subnetgroupdescription: "Development Subnet Group asdasdas"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: create subnet group no change
      dms_replication_subnet_group:
        state: present
        subnetgroupidentifier: "{{ dms_sg_identifier }}"
        subnetgroupdescription: "Development Subnet Group"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]
        <<: *aws_connection_info
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

    - name: update subnet group
      dms_replication_subnet_group:
        state: present
        subnetgroupidentifier: "{{ dms_sg_identifier }}"
        subnetgroupdescription: "Development Subnet Group updated"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]
        <<: *aws_connection_info
      register: result

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: update subnet group no change
      dms_replication_subnet_group:
        state: present
        subnetgroupidentifier: "{{ dms_sg_identifier }}"
        subnetgroupdescription: "Development Subnet Group updated"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]
        <<: *aws_connection_info
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

  always:
    - name: delete subnet group no change
      dms_replication_subnet_group:
        state: absent
        subnetgroupidentifier: "{{ dms_sg_identifier }}"
        subnetgroupdescription: "Development Subnet Group updated"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]
        <<: *aws_connection_info
      register: result

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: delete subnet group no change
      dms_replication_subnet_group:
        state: absent
        subnetgroupidentifier: "{{ dms_sg_identifier }}"
        subnetgroupdescription: "Development Subnet Group updated"
        subnetids: [ "{{ subnet1.subnet.id }}", "{{ subnet2.subnet.id }}"]
        <<: *aws_connection_info
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

    - name: delete subnet1
      ec2_vpc_subnet:
        state: absent
        vpc_id:  "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.16/28
        az: eu-west-1a

    - name: delete subnet2
      ec2_vpc_subnet:
        state: absent
        vpc_id:  "{{ testing_vpc.vpc.id }}"
        cidr: 10.22.32.32/28
        az: eu-west-1c

    - name: delete VPC for use in testing
      ec2_vpc_net:
        name: "{{ resource_prefix }}-vpc"
        cidr_block: 10.22.32.0/23
        tags:
          Name: Ansible ec2_instance Testing VPC
        tenancy: default
        state: absent
