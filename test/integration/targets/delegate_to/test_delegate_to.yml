
- hosts: testhost3
  vars:
    - template_role: ./roles/test_template
    - output_dir: "{{ playbook_dir }}"
    - templated_var: foo
    - templated_dict: { 'hello': 'world' }
  tasks:
    - name: Test no delegate_to
      setup:
      register: setup_results

    - assert:
        that:
          - '"127.0.0.3" in setup_results.ansible_facts.ansible_env["SSH_CONNECTION"]'

    - name: Test delegate_to with host in inventory
      setup:
      register: setup_results
      delegate_to: testhost4

    - assert:
        that:
          - '"127.0.0.4" in setup_results.ansible_facts.ansible_env["SSH_CONNECTION"]'

    - name: Test delegate_to with host not in inventory
      setup:
      register: setup_results
      delegate_to: 127.0.0.254

    - assert:
        that:
          - '"127.0.0.254" in setup_results.ansible_facts.ansible_env["SSH_CONNECTION"]'


            #
# Smoketest some other modules do not error as a canary
#
    - name: Test file works with delegate_to and a host in inventory
      file: path={{ output_dir }}/foo.txt mode=0644 state=touch
      delegate_to: testhost4

    - name: Test file works with delegate_to and a host not in inventory
      file: path={{ output_dir }}/tmp.txt mode=0644 state=touch
      delegate_to: 127.0.0.254

    - name: Test template works with delegate_to and a host in inventory
      template: src={{ template_role }}/templates/foo.j2 dest={{ output_dir }}/foo.txt
      delegate_to: testhost4

    - name: Test template works with delegate_to and a host not in inventory
      template: src={{ template_role }}/templates/foo.j2 dest={{ output_dir }}/foo.txt
      delegate_to: 127.0.0.254

    - name: remove test file
      file: path={{ output_dir }}/foo.txt state=absent

    - name: remove test file
      file: path={{ output_dir }}/tmp.txt state=absent


# For testing the case that hit the traceback at https://github.com/ansible/ansible/issues/15365#issuecomment-282752186
- hosts: testhost3
  tasks:
    - name: Test delegate_to in a loop
      setup:
      delegate_to: "{{ item }}"
      with_items: "{{ groups.test_hosts }}"


# For testing the case that hit the traceback at https://github.com/ansible/ansible/issues/15365#issuecomment-282752186
- hosts: testhost3
  tasks:
    - name: Test delegate_to in a loop with run_once is true
      setup:
      delegate_to: "{{ item }}"
      with_items: "{{ groups.test_hosts }}"
      run_once: true


# For testing the case that hit the traceback at https://github.com/ansible/ansible/issues/15365#issuecomment-282752186
- name: Test delegate_to each testhost and delegate_facts is true and run_once is true and in a loop for a single host
  hosts: testhost3
  tasks:
    - name: Gather facts from each host in test_hosts with delegate_to and delegate_facts is true and run once
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      with_items: "{{ groups.test_hosts }}"
      run_once: true


# For testing the case that hit the traceback at https://github.com/ansible/ansible/issues/15365#issuecomment-282752186
- name: Test delegate_to testhost4 and delegate_facts is true and run_once is true and in a loop for multiple hosts
  hosts: test_hosts
  tasks:
    - name: Gather facts from other test hosts with run_once and delegate_to testhost4 and delegate_facts is false
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      run_once: true
      with_items: "{{ groups.test_hosts }}"
      ignore_errors: true


- name: Test delegate_to testhost4 and delegate_facts is true and run_once is true
  hosts: test_hosts
  tasks:
    - name: Gather facts from other test hosts with run_once and delegate_to testhost4
      setup:
      delegate_to: testhost4
      delegate_facts: true
      run_once: true

    - name: Assert that the facts for testhost4 are delegated from testhost4 with delegate_facts is true and run_once is true
      assert:
        that:
          - '"127.0.0.4" in hostvars["testhost4"].ansible_env["SSH_CONNECTION"]'


- name: Test delegate_to testhost4 and delegate_facts is false and run_once is true
  hosts: test_hosts
  tasks:
    - name: Gather facts from other test hosts with run_once and delegate_to testhost4 and delegate_facts is false
      setup:
      delegate_to: testhost4
      delegate_facts: false
      run_once: true

    - name: Assert that the facts for testhost4 are delegated from testhost4 with delegate_facts is false and run_once is true
      assert:
        that:
          - '"127.0.0.4" in hostvars["testhost4"].ansible_env["SSH_CONNECTION"]'


- hosts: testhost3
  gather_facts: false
  tasks:
    - name: Test delegate_to and delegate_facts
      setup:
        gather_subset:
            - "!network"
            - "!hardware"
      delegate_to: testhost4
      delegate_facts: True

    - name: Assert that the facts for testhost4 are delegated from testhost4 with delegate_facts is true
      assert:
        that:
          - '"127.0.0.4" in hostvars["testhost4"].ansible_env["SSH_CONNECTION"]'

    - name: Test delegate_to and delegate_facts no delegate_facts
      setup:
        gather_subset:
            - "!network"
            - "!hardware"
      delegate_to: testhost4
      delegate_facts: False

    - name: Assert that the facts for testhost3 are delegated from testhost4 with delegate_facts is false
      assert:
        that:
          - '"127.0.0.4" in hostvars["testhost3"].ansible_env["SSH_CONNECTION"]'

