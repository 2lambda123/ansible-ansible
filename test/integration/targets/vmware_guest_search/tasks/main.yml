# Test code for the vmware_guest_search module.
# Copyright: (c) 2017, James Tanner <tanner.jc@gmail.com>
# Copyright: (c) 2018, Moshe Immerman <moshe.immerman@gmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: store the vcenter container ip
  set_fact:
    vcsim: "{{ lookup('env', 'vcenter_host') }}"
- debug: var=vcsim

- name: wait for flask server
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall

- name: start vcsim
  uri:
    url: http://{{ vcsim }}:5000/spawn?cluster=2
  register: vcsim_instance

- name: wait for vcsim server
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- name: get a list of VMS from vcsim
  uri:
    url: http://{{ vcsim }}:5000/govc_find?filter=VM
  register: vmlist

- debug: var=vcsim_instance
- debug: var=vmlist


- name: find vm by folder/name
  vmware_guest_search:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: DC0
    name: F0/DC0_H0
  register: results

- assert:
    that:
      - "results.vms == ['DC0_H0_VM1', 'DC0_H0_VM0']"

- name: find vm by folder/name
  vmware_guest_search:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: DC0
    name: F0/DC0_H0
  register: results

- assert:
    that:
      - "results.vms == ['DC0_H0_VM1', 'DC0_H0_VM0']"

- name: find vm by name recursively
  vmware_guest_search:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: DC0
    recursive: true
    name: DC0_H0
  register: results

- assert:
    that:
      - "results.vms == ['DC0_H0_VM1', 'DC0_H0_VM0']"

- name: create new VMs
  vmware_guest:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    name: "VM03"
    guest_id: centos64Guest
    datacenter: DC0
    folder: "vm"
    hardware:
      num_cpus: 1
      memory_mb: 1024
    disk:
        - size: 1gb
          type: thin
          autoselect_datastore: True

- name: find vm by name without folder
  vmware_guest_search:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: DC0
    name: VM03
  register: results

- assert:
    that:
      - "results.vms == ['VM03']"