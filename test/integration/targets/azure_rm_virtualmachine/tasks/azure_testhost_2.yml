- name: TEST | Create virtual machine without public ip address and with boot diagnostics enabled
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: testvmnoip
      vm_size: Standard_A0
      admin_username: adminuser
      admin_password: Password123!
      short_hostname: testvm
      os_type: Linux
      public_ip_allocation_method: Disabled
      availability_set: "{{ availability_set_names[0] }}"
      boot_diagnostics:
        enabled: yes
      image:
        offer: UbuntuServer
        publisher: Canonical
        sku: 16.04-LTS
        version: latest
  register: output

- assert:
      that:
        - azure_vm.properties.diagnosticsProfile.bootDiagnostics.enabled
        - azure_vm.properties.diagnosticsProfile.bootDiagnostics.storageUri is defined
        - azure_vm.properties.instanceView.bootDiagnostics.consoleScreenshotBlobUri is defined
        - azure_vm.properties.instanceView.bootDiagnostics.serialConsoleLogBlobUri is defined
        - not 'publicIPAddress' in output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties

- name: TEST | Delete VM with no public ip
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: testvmnoip
      state: absent
      remove_on_absent: all_autocreated
      vm_size: Standard_A0
  async: 5000
  poll: 0

- set_fact:
      niclist:
         - name: testnic011
           resource_group: "{{ resource_group_secondary }}"
         - name: testnic012
           resource_group: "{{ resource_group_secondary }}"

- name: TEST | Create virtual network
  azure_rm_virtualnetwork:
      resource_group: "{{ resource_group_secondary }}"
      name: "{{ vm_name }}"
      address_prefixes: "10.10.0.0/16"
  register: vn

- name: TEST | Add subnet
  azure_rm_subnet:
      resource_group: "{{ resource_group_secondary }}"
      name: "{{ vm_name }}"
      address_prefix: "10.10.0.0/24"
      virtual_network: "{{ vm_name }}"

- name: TEST | Create NICs for dual nic VM
  azure_rm_networkinterface:
      resource_group: "{{ item.resource_group }}"
      name: "{{ item.name }}"
      virtual_network: "{{ vn.state.id }}"
      subnet: "{{ vm_name }}"
      security_group: "{{ vm_name }}"
  loop: "{{ niclist }}"

- name: TEST | Create virtual machine with two NICs
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      vm_size: Standard_A0
      storage_account: "{{ storage_accounts[0] }}"
      storage_container: "{{ vm_name }}"
      storage_blob: "{{ vm_name }}.vhd"
      admin_username: adminuser
      admin_password: Password123!
      short_hostname: testvm
      os_type: Linux
      os_disk_size_gb: 64
      os_disk_name: testosdiskxx
      network_interfaces: "{{ niclist }}"
      availability_set: "{{ availability_set_names[1] }}"
      image:
        offer: UbuntuServer
        publisher: Canonical
        sku: 16.04-LTS
        version: latest
      tags:
        abc: def
  register: output

- assert:
      that:
        - azure_vm.properties.availabilitySet.id
        - azure_vm.properties.storageProfile.osDisk.name == 'testosdiskxx'

- name: TEST | Retrieve vms facts (filtering by name)
  azure_rm_virtualmachine_facts:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}"
  register: results

- name: TEST | Assert that facts module returned the second vm
  assert:
    that:
      - results.vms | length == 1
      - results.vms[0].name == "{{ vm_name }}"
      - results.vms[0].location
      - results.vms[0].admin_username == 'adminuser'
      - results.vms[0].resource_group == "{{ resource_group }}"
      - results.vms[0].power_state != None

- name: TEST | Retrieve facts by tags
  azure_rm_virtualmachine_facts:
    tags:
      - abc:def
  register: results

- name: TEST | Assert that facts module returned the second vm
  assert:
    that:
      - results.vms | length >= 1

- name: TEST | Should be idempotent with a dual NICs
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      vm_size: Standard_A0
      storage_account: "{{ storage_accounts[0] }}"
      storage_container: "{{ vm_name }}"
      storage_blob: "{{ vm_name }}.vhd"
      admin_username: adminuser
      admin_password: Password123!
      short_hostname: testvm
      os_type: Linux
      os_disk_size_gb: 64
      network_interfaces: "{{ niclist }}"
      availability_set: "{{ availability_set_names[1] }}"
      image:
        offer: UbuntuServer
        publisher: Canonical
        sku: 16.04-LTS
        version: latest
  register: output

- assert:
      that: not output.changed

- name: TEST | Generalize VM
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      generalized: yes

- name: TEST | Gather facts and check if machine is generalized
  azure_rm_virtualmachine_facts:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
  register: generalized_output

- assert:
      that: generalized_output.vms[0].power_state == 'generalized'

- name: TEST | Delete dual NIC VM
  azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}"
      state: absent
      vm_size: Standard_A0
  async: 5000
  poll: 0
