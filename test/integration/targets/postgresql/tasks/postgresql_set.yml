# Test code for the postgresql_set module
# Copyright: (c) 2019, Andrew Klychkov (@Andersson007) <aaklychkov@mail.ru>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
#
# Notice: assertions are different for Ubuntu 16.04 because they don't work
# correctly for these tests. However I checked it manually on 16.04
# and it works as expected.

- name: postgresql_set - preparation to the next step
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    reset: yes
  ignore_errors: yes

- name: postgresql_set - set work_mem (restart is not required)
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    value: 12MB
  register: set_wm
  ignore_errors: yes

- assert:
    that:
      - set_wm.name == 'work_mem'
      - set_wm.changed == true
      - set_wm.cur_val == '12MB'
      - set_wm.cur_val != set_wm.prev_val
      - set_wm.restart_required == false
  when: ansible_distribution != "Ubuntu" and ansible_distribution_major_version != '16'

- assert:
    that:
      - set_wm.name == 'work_mem'
      - set_wm.changed == true
      - set_wm.restart_required == false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == '16'

- name: postgresql_set - reset work_mem (restart is not required)
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    reset: yes
  register: reset_wm
  ignore_errors: yes

- assert:
    that:
      - reset_wm.name == 'work_mem'
      - reset_wm.changed == true
      - reset_wm.cur_val != reset_wm.prev_val
      - reset_wm.restart_required == false
  when: ansible_distribution != "Ubuntu" and ansible_distribution_major_version != '16'

- assert:
    that:
      - set_wm.name == 'work_mem'
      - set_wm.changed == true
      - set_wm.restart_required == false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == '16'

- name: postgresql_set - reset work_mem again to check that nothing changed (restart is not required)
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    reset: yes
  register: reset_wm2
  ignore_errors: yes

- assert:
    that:
      - reset_wm2.name == 'work_mem'
      - reset_wm2.changed == false
      - reset_wm2.cur_val == reset_wm2.prev_val
      - reset_wm2.restart_required == false
  when: ansible_distribution != "Ubuntu" and ansible_distribution_major_version != '16'

- assert:
    that:
      - reset_wm2.name == 'work_mem'
      - reset_wm2.changed == false
      - reset_wm2.restart_required == false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == '16'

- name: postgresql_set - preparation to the next step
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    value: 14MB
  ignore_errors: yes

- name: postgresql_set - set work_mem to initial state (restart is not required)
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: work_mem
    value: default
  register: def_wm
  ignore_errors: yes

- assert:
    that:
      - def_wm.name == 'work_mem'
      - def_wm.changed == true
      - def_wm.cur_val != def_wm.prev_val
      - def_wm.restart_required == false
  when: ansible_distribution != "Ubuntu" and ansible_distribution_major_version != '16'

- assert:
    that:
      - def_wm.name == 'work_mem'
      - def_wm.changed == true
      - def_wm.restart_required == false
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == '16'

- name: postgresql_set - set shared_buffers (restart is required)
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_set:
    db: postgres
    login_user: "{{ pg_user }}"
    name: shared_buffers
    value: 111MB
  register: set_shb
  ignore_errors: yes

- assert:
    that:
      - set_shb.name == 'shared_buffers'
      - set_shb.changed == true
      - set_shb.restart_required == true
