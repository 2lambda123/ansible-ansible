- name: Enable extension
  become_user: "{{ pg_user }}"
  become: True
  postgresql_ext:
    db: "{{ db_name }}"
    state: present
    name: "{{ ext_name }}"
    version: "{{ ext_version }}"
  register: result

- name: assert that module reports a change
  assert:
    that:
       - "result.changed"

- name: Enable extension - idempotence test
  become_user: "{{ pg_user }}"
  become: True
  postgresql_ext:
    db: "{{ db_name }}"
    state: present
    name: "{{ ext_name }}"
    version: "{{ ext_version }}"
  register: result

- name: assert that module reports no change
  assert:
    that:
       - "not result.changed"

- name: Check that the extension is available
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select extname,extversion from pg_extension where extname = '{{ ext_name }}'" | psql -d "{{ db_name }}";
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
      - "ext_version|default(ext_default_version) in result.stdout"

- name: Check that the function defined by extension is available
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select dummy_display_ext_version();" | psql -d "{{ db_name }}" -t -c "select dummy_display_ext_version();"
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
      - "result.stdout_lines[-2].strip() == ext_version|default(ext_default_version)"

- name: Disable extension
  become_user: "{{ pg_user }}"
  become: True
  postgresql_ext:
    db: "{{ db_name }}"
    state: absent
    name: "{{ ext_name }}"
  register: result

- name: assert that module reports a change
  assert:
    that:
       - "result.changed"

- name: Disable extension - idempotence test
  become_user: "{{ pg_user }}"
  become: True
  postgresql_ext:
    db: "{{ db_name }}"
    state: absent
    name: "{{ ext_name }}"
  register: result

- name: assert that module reports no change
  assert:
    that:
       - "not result.changed"

- name: Check that the extension is not available
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select extname,extversion from pg_extension where extname = '{{ ext_name }}'" | psql -d "{{ db_name }}";
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(0 rows)'"
