# Test code for the postgresql_facts module
# Copyright: (c) 2019, Andrew Klychkov (@Andersson007) <aaklychkov@mail.ru>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: postgresql_facts - test return values
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_facts:
    db: "{{ db_default }}"
    login_user: "{{ pg_user }}"
  register: result
  ignore_errors: yes

- assert:
    that:
      - result.ansible_facts.version != {}
      - result.ansible_facts.databases.{{ db_default }}.collate
      - result.ansible_facts.languages
      - result.ansible_facts.namespaces.information_schema
      - result.ansible_facts.settings

- name: postgresql_facts - check incl_subset param passed by list
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_facts:
    db: "{{ db_default }}"
    login_user: "{{ pg_user }}"
    incl_subset:
      - ver*
      - rol*
  register: result
  ignore_errors: yes

- assert:
    that:
      - result.ansible_facts.version != {}
      - result.ansible_facts.roles
      - result.ansible_facts.databases == {}
      - result.ansible_facts.extensions == {}
      - result.ansible_facts.namespaces == {}
      - result.ansible_facts.languages == {}
      - result.ansible_facts.repl_slots == {}
      - result.ansible_facts.replications == {}
      - result.ansible_facts.settings == {}
      - result.ansible_facts.tablespaces == {}

- name: postgresql_facts - check incl_subset param passed by string
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_facts:
    db: "{{ db_default }}"
    incl_subset: ver*,role*
    login_user: "{{ pg_user }}"
  register: result
  ignore_errors: yes

- assert:
    that:
      - result.ansible_facts.version != {}
      - result.ansible_facts.roles
      - result.ansible_facts.databases == {}
      - result.ansible_facts.extensions == {}
      - result.ansible_facts.namespaces == {}
      - result.ansible_facts.languages == {}
      - result.ansible_facts.repl_slots == {}
      - result.ansible_facts.replications == {}
      - result.ansible_facts.settings == {}
      - result.ansible_facts.tablespaces == {}

- name: postgresql_facts - check excl_subset param passed by string
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_facts:
    db: "{{ db_default }}"
    excl_subset: ver*
    login_user: "{{ pg_user }}"
  register: result
  ignore_errors: yes

- assert:
    that:
      - result.ansible_facts.version == {}
      - result.ansible_facts.roles

- name: postgresql_facts - check excl_subset param passed by list
  become_user: "{{ pg_user }}"
  become: yes
  postgresql_facts:
    db: "{{ db_default }}"
    excl_subset:
      - ver*
      - rol*
    login_user: "{{ pg_user }}"
  register: result
  ignore_errors: yes

- assert:
    that:
      - result.ansible_facts.version == {}
      - result.ansible_facts.roles == {}
      - result.ansible_facts.databases
