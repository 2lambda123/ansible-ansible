- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: yes

- name: Create storage account
  azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: "storage{{ rpfx }}"
      account_type: Standard_LRS

- name: Sample for Azure REST API - StorageAccounts_ListKeys
  azure_rm_resource:
    api_version: '2018-07-01'
    method: POST
    resource_group: "{{ resource_group }}"
    provider: storage
    resource_type: storageaccounts
    resource_name: "storage{{ rpfx }}"
    subresource:
      - type: listkeys
  register: storage_output

- name: Create instance of Cluster -- check mode
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    cluster_version: 3.5
    os_type: linux
    tier: standard
    cluster_definition:
      kind: spark
      configurations:
        gateway:
          rest_auth_credential:
            restAuthCredential.isEnabled: yes
            restAuthCredential.username: http-user
            restAuthCredential.password: MuABCPassword!!@123 
    storage_profile:
      storage_accounts:
        - name: storage{{ rpfx }}.blob.core.windows.net 
          is_default: yes
          container: "cluster{{ rpfx }}"
          key: "{{ storage_output.keys[0]['value'] }}"
    compute_profile:
      roles:
        - name: headnode
          target_instance_count: 2
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: workernode
          min_instance_count: 1
          target_instance_count: 4
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: zookeepernode
          target_instance_count: 3
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
  check_mode: yes
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create instance of Cluster
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    cluster_version: 3.5
    os_type: linux
    tier: standard
    cluster_definition:
      kind: spark
      configurations:
        gateway:
          rest_auth_credential:
            restAuthCredential.isEnabled: yes
            restAuthCredential.username: http-user
            restAuthCredential.password: MuABCPassword!!@123 
    storage_profile:
      storage_accounts:
        - name: storage{{ rpfx }}.blob.core.windows.net 
          is_default: yes
          container: "cluster{{ rpfx }}"
          key: "{{ storage_output.keys[0]['value'] }}"
    compute_profile:
      roles:
        - name: headnode
          target_instance_count: 2
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: workernode
          min_instance_count: 1
          target_instance_count: 4
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: zookeepernode
          target_instance_count: 3
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
  register: output

- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create again instance of Cluster
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    cluster_version: 3.5
    os_type: linux
    tier: standard
    cluster_definition:
      kind: spark
      configurations:
        gateway:
          rest_auth_credential:
            restAuthCredential.isEnabled: yes
            restAuthCredential.username: http-user
            restAuthCredential.password: MuABCPassword!!@123 
    storage_profile:
      storage_accounts:
        - name: storage{{ rpfx }}.blob.core.windows.net 
          is_default: yes
          container: "cluster{{ rpfx }}"
          key: "{{ storage_output.keys[0]['value'] }}"
    compute_profile:
      roles:
        - name: headnode
          target_instance_count: 2
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: workernode
          min_instance_count: 1
          target_instance_count: 4
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
        - name: zookeepernode
          target_instance_count: 3
          hardware_profile:
            vm_size: Standard_D3
          os_profile:
            linux_operating_system_profile:
              username: sshuser
              password: MuABCPassword!!@123
  register: output
- name: Assert the state has not changed
  assert:
    that:
      - output.changed == false

- name: Delete instance of Cluster -- check mode
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    state: absent
  check_mode: yes
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete instance of Cluster
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed

- name: Delete unexisting instance of Cluster
  azure_rm_hdinsightcluster:
    resource_group: "{{ resource_group }}"
    name: "cluster{{ rpfx }}"
    state: absent
  register: output
- name: Assert the state has changed
  assert:
    that:
      - output.changed == false
