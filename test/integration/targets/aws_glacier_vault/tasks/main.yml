---
#  Author: Lo√Øc BLOT

- block:

    # ============================================================
    - name: test with no parameters
      aws_glacier_vault:
      register: result
      ignore_errors: true

    - name: assert failure when called with no parameters
      assert:
        that:
           - 'result.failed'
           - 'result.msg.startswith("missing required arguments: name")'

    - name: set up aws connection info
      set_fact:
        aws_connection_info: &aws_connection_info
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          security_token: "{{ security_token }}"
          region: "{{ aws_region }}"
      no_log: yes

    # ============================================================
    - name: test state=present without tags (expect changed=True)
      aws_glacier_vault:
        <<: *aws_connection_info
        name: '{{ glacier_vault_name }}'
        state: present
      register: result

    - name: assert state=present
      assert:
        that:
           - 'result is not failed'
           - 'result.changed == True'

    # ============================================================
    - name: test state=present with tags (expect changed=True)
      aws_glacier_vault:
        <<: *aws_connection_info
        name: '{{ glacier_vault_name }}'
        tags: '{{ glacier_vault_tags }}'
        state: present
      register: result

    - name: assert state=present add tags
      assert:
        that:
           - 'result is not failed'
           - 'result.changed == True'

    # ============================================================
    - name: test state=present drop tags (expect changed=True)
      aws_glacier_vault:
        <<: *aws_connection_info
        name: '{{ glacier_vault_name }}'
        tags: {}
        state: present
      register: result

    - name: assert state=present remove tags
      assert:
        that:
           - 'result is not failed'
           - 'result.changed == True'

    # ============================================================
    - name: test state=absent (expect changed=False)
      aws_glacier_vault:
        <<: *aws_connection_info
        name: "{{ glacier_vault_name }}"
        state: absent
      register: result

    - name: assert state=absent
      assert:
        that:
           - 'result is not failed'
           - 'result.changed == True'
  always:

    # ============================================================
    - name: test state=absent (expect changed=False)
      aws_glacier_vault:
        <<: *aws_connection_info
        name: "{{ glacier_vault_name }}"
        state: absent
      ignore_errors: yes
