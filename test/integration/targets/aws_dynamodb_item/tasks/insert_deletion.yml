- name: set up aws connection info
  set_fact:
    aws_connection_info: &aws_connection_info
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token }}"
      region: "{{ ec2_region }}"
  no_log: yes

- name: inserting db record
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: present
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    update_expression: "SET person =:person"
    expression_attribute_values: {":person": {"S": "ochoa"}}
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed

- name: inserting db record with a primary record that already exists
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: present
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    update_expression: "SET person =:person"
    expression_attribute_values: {":person": {"S": "ochoa"}}
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed

- name: adding protected field status (protected word)
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: present
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    update_expression: 'SET #s =:status'
    expression_attribute_values: {":status": {"S": "red"}}
    expression_attribute_names: {"#s": "status"}
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed

- name: updating db record with the status protected word
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: present
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    update_expression: 'SET #s =:status'
    expression_attribute_values: {":status": {"S": "red"}}
    expression_attribute_names: {"#s": "status"}
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed

- name: updating to delete attribute 'person' in previously added db record
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: present
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    update_expression: 'REMOVE person'
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed

- name: deletes a single db record that doesnt exist
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: absent
    primary_key: {"bank": {"S": "santander"}, "quantity": {"N": "3000"}}
    <<: *aws_connection_info
  ignore_errors: yes
  register: result
- name: assert status
  assert:
    that:
      - result is not changed

- name: deletes a single db record that doesnt match conditional expression (doesnt exist)
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: absent
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "2000"}}
    condition_expression: person =:person
    expression_attribute_values: {":person": {"S": "ochoa"}}
    <<: *aws_connection_info
  ignore_errors: yes
  register: result
- name: assert failure
  assert:
    that:
      - result.failed
      - '"No item matching your conditional expression" in result.msg'

- name: deletes a single db record
  aws_dynamodb_item:
    table: "{{ dynamo_db_table }}"
    state: absent
    primary_key: {"bank": {"S": "hsbc"}, "quantity": {"N": "1000"}}
    <<: *aws_connection_info
  register: result
- name: assert status
  assert:
    that:
      - result.changed
