#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for ios_lldp_global
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': ['preview'],
                    'supported_by': 'network'}


DOCUMENTATION = """
---
module: ios_lldp_global
version_added: 2.9
short_description: Configure and manage Link Layer Discovery Protocol(LLDP) attributes on IOS platforms.
description: This module configures and manages the Link Layer Discovery Protocol(LLDP) attributes on IOS platforms.
author: Sumit Jaiswal (@justjais)
notes:
- Tested against Cisco IOSv Version 15.2 on VIRL
- This module works with connection C(network_cli).
See L(IOS Platform Options,../network/user_guide/platform_ios.html).
options:
  config:
    description: A dictionary of LLDP options
    type: dict
    suboptions:
      holdtime:
        description:
          - LLDP holdtime (in sec) to be sent in packets.
          - Refer to vendor documentation for valid values.
        type: int
      reinit:
        description:
          - Specify the delay (in secs) for LLDP to initialize.
          - Refer to vendor documentation for valid values.
        type: int
      run:
        description:
          - Enable LLDP
        type: bool
      timer:
        description:
          - Specify the rate at which LLDP packets are sent (in sec).
          - Refer to vendor documentation for valid values.
        type: int
      tlv_select:
        description:
          - Selection of LLDP TLVs to send
        type: dict
        suboptions:
          mac_phy_cfg:
            description:
              - IEEE 802.3 MAC/Phy Configuration/status TLV
            type: bool
          management_address:
            description:
              - Management Address TLV
            type: bool
          port_description:
            description:
              - Port Description TLV
            type: bool
          port_vlan:
            description:
              - Port VLAN ID TLV
            type: bool
          power_management:
            description:
              - IEEE 802.3 DTE Power via MDI TLV
            type: bool
          system_capabilities:
            description:
              - System Capabilities TLV
            type: bool
          system_description
            description:
              - System Description TLV
            type: bool
          system_name:
            description:
              - System Name TLV
            type: bool
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - deleted
    default: merged
"""

EXAMPLES = """
---

# Using merged

# Before state:
# -------------
#


- name: Merge provided configuration with device configuration
  ios_lldp_global:
    config:
    state: merged

# After state:
# ------------
#


# Using replaced

# Before state:
# -------------
#


- name: Replaces LLDP device configuration with provided configuration
  ios_lldp_global:
    config:
    state: replaced

# After state:
# -------------
#


# Using overridden

# Before state:
# -------------
#


- name: Override LLDP device configuration with provided configuration
  ios_lldp_global:
    config:
    state: overridden

# After state:
# -------------
#


# Using Deleted without any config passed
#"(NOTE: This will delete all of configured LLDP module attributes)"

# Before state:
# -------------
#


- name: "Delete LLDP attributes (Note: This won't delete the interface itself)"
  ios_lldp_global:
    state: deleted

# After state:
# -------------
#


"""

RETURN = """
before:
  description: The configuration prior to the model invocation
  returned: always
  type: list
  sample: The configuration returned will alwys be in the same format of the paramters above.
after:
  description: The resulting configuration model invocation
  returned: when changed
  type: list
  sample: The configuration returned will alwys be in the same format of the paramters above.
commands:
  description: The set of commands pushed to the remote device
  returned: always
  type: list
  sample: ['', '', '']
"""

from ansible.module_utils.basic import AnsibleModule
from ansible.module_utils.network.ios.argspec.lldp_global.lldp_global import Lldp_globalArgs
from ansible.module_utils.network.ios.config.lldp_global.lldp_global import Lldp_global


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Lldp_globalArgs.argument_spec,
                           supports_check_mode=True)

    result = Lldp_global(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
