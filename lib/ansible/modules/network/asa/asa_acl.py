#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for asa_acl
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': ['preview'],
                    'supported_by': 'network'}


DOCUMENTATION = """
---
module: asa_acl
version_added: '2.10'
short_description: Manages named or numbered ACLs on ASA devices.
description: This module configures and manages the named or numbered ACLs on ASA platforms.
author: Sumit Jaiswal (@justjais)
notes:
- Tested against Cisco ASA Version 9.10(1)11
- This module works with connection C(network_cli).
  See L(ASA Platform Options,../network/user_guide/platform_asa.html).
options:
  config:
    description: A dictionary of ACL options.
    type: list
    elements: dict
    suboptions:
      afi:
        description:
          - The Address Family Indicator (AFI) for the Access Control Lists (ACL).
        required: true
        type: str
        choices:
          - ipv4
          - ipv6
      acls:
        description:
          - A list of Access Control Lists (ACL).
        type: list
        elements: dict
        suboptions:
          name:
            description: The name or the number of the ACL.
            required: true
            type: str
          acl_type:
            description:
              - ACL type
            type: str
            choices:
              - extended
              - standard
          rename:
            description: Rename an existing access-list.
            type: str
          aces:
            description: The entries within the ACL.
            elements: dict
            type: list
            suboptions:
              grant:
                description: Specify the action.
                required: true
                type: str
                choices:
                  - permit
                  - deny
              line:
                description:
                  - Use this to specify line number at which ACE should be entered.
                  - Existing ACE can be updated based on the input line number.
                  - It's not a required param in case of configuring the acl, but in
                    case of Delete operation it's required, else Delete operation won't
                    work as expected.
                  - Refer to vendor documentation for valid values.
                type: int
              remark:
                description:
                  - Specify a comment (remark) for the access-list after
                    this keyword
                type: str
              protocol_options:
                description: protocol type.
                type: dict
                suboptions:
                  protocol_number:
                    description: An IP protocol number
                    type: int
                  ah:
                    description: Authentication Header Protocol.
                    type: bool
                  eigrp:
                    description: Cisco's EIGRP routing protocol.
                    type: bool
                  esp:
                    description: Encapsulation Security Payload.
                    type: bool
                  gre:
                    description: Cisco's GRE tunneling.
                    type: bool
                  icmp:
                    description: Internet Control Message Protocol.
                    type: dict
                    suboptions:
                      set:
                        description:
                          - When ICMP options are not specified and user want to set
                            ICMP only as protocol option
                          - Note, not required if ICMP options are set
                        type: bool
                      alternate_address:
                        description: Alternate address
                        type: bool
                      conversion_error:
                        description: Datagram conversion
                        type: bool
                      echo:
                        description: Echo (ping)
                        type: bool
                      echo_reply:
                        description: Echo reply
                        type: bool
                      information_reply:
                        description: Information replies
                        type: bool
                      information_request:
                        description: Information requests
                        type: bool
                      mask_reply:
                        description: Mask replies
                        type: bool
                      mask_request:
                        description: mask_request
                        type: bool
                      mobile_redirect:
                        description: Mobile host redirect
                        type: bool
                      parameter_problem:
                        description: All parameter problems
                        type: bool
                      redirect:
                        description: All redirects
                        type: bool
                      router_advertisement:
                        description: Router discovery advertisements
                        type: bool
                      router_solicitation:
                        description: Router discovery solicitations
                        type: bool
                      source_quench:
                        description: Source quenches
                        type: bool
                      time_exceeded:
                        description: All time exceededs
                        type: bool
                      timestamp_reply:
                        description: Timestamp replies
                        type: bool
                      timestamp_request:
                        description: Timestamp requests
                        type: bool
                      traceroute:
                        description: Traceroute
                        type: bool
                      unreachable:
                        description: All unreachables
                        type: bool
                  icmp6:
                    description: Internet Control Message Protocol.
                    type: dict
                    suboptions:
                      set:
                        description:
                          - When ICMP options are not specified and user want to set
                            ICMP only as protocol option
                          - Note, not required if ICMP options are set
                        type: bool
                      echo:
                        description: Echo (ping)
                        type: bool
                      echo_reply:
                        description: Echo reply
                        type: bool
                      membership_query:
                        description: Membership query
                        type: bool
                      membership_reduction:
                        description: Membership reduction
                        type: bool
                      membership_report:
                        description: Membership report
                        type: bool
                      neighbor_advertisement:
                        description: Neighbor advertisement
                        type: bool
                      neighbor_redirect:
                        description: Neighbor redirect
                        type: bool
                      neighbor_solicitation:
                        description: Neighbor_solicitation
                        type: bool
                      packet_too_big:
                        description: Packet too big
                        type: bool
                      parameter_problem:
                        description: Parameter problem
                        type: bool
                      router_advertisement:
                        description: Router discovery advertisements
                        type: bool
                      router_renumbering:
                        description: Router renumbering
                        type: bool
                      router_solicitation:
                        description: Router solicitation
                        type: bool
                      time_exceeded:
                        description: Time exceeded
                        type: bool
                      unreachable:
                        description: All unreachables
                        type: bool
                  igmp:
                    description: Internet Gateway Message Protocol.
                    type: bool
                  igrp:
                    description: Internet Gateway Routing Protocol.
                    type: bool
                  ip:
                    description: Any Internet Protocol.
                    type: bool
                  ipinip:
                    description: IP in IP tunneling.
                    type: bool
                  ipsec:
                    description: IP Security.
                    type: bool
                  nos:
                    description: KA9Q NOS compatible IP over IP tunneling.
                    type: bool
                  ospf:
                    description: OSPF routing protocol.
                    type: bool
                  pcp:
                    description: Payload Compression Protocol.
                    type: bool
                  pim:
                    description: Protocol Independent Multicast.
                    type: bool
                  pptp:
                    description: Point-to-Point Tunneling Protocol.
                    type: bool
                  sctp:
                    description: Stream Control Transmission Protocol.
                    type: bool
                  snp:
                    description: Simple Network Protocol.
                    type: bool
                  udp:
                    description: User Datagram Protocol.
                    type: bool
                  tcp:
                    description: Match TCP packet flags
                    type: bool
              source:
                description: Specify the packet source.
                type: dict
                suboptions:
                  address:
                    description: Source network address.
                    type: str
                  netmask:
                    description: Netmask for source IP address, valid with IPV4 address.
                    type: str
                  any:
                    description:
                      - Match any source address.
                    type: bool
                  port_protocol:
                    description:
                      - Specify the destination port along with protocol.
                      - Note, Valid with TCP/UDP protocol_options
                    type: dict
                    suboptions:
                      eq:
                        description: Match only packets on a given port number.
                        type: str
                      gt:
                        description: Match only packets with a greater port number.
                        type: str
                      lt:
                        description: Match only packets with a lower port number.
                        type: str
                      neq:
                        description: Match only packets not on a given port number.
                        type: str
                      range:
                        description: Port range operator
                        type: dict
                        suboptions:
                          start:
                            description: Specify the start of the port range.
                            type: int
                          end:
                            description: Specify the end of the port range.
                            type: int
              destination:
                description: Specify the packet destination.
                type: dict
                suboptions:
                  address:
                    description: Host address to match, or any single host address.
                    type: str
                  netmask:
                    description: Netmask for destination IP address, valid with IPV4 address.
                    type: str
                  any:
                    description: Match any source address.
                    type: bool
                  port_protocol:
                    description:
                      - Specify the destination port along with protocol.
                      - Note, Valid with TCP/UDP protocol_options
                    type: dict
                    suboptions:
                      eq:
                        description: Match only packets on a given port number.
                        type: str
                      gt:
                        description: Match only packets with a greater port number.
                        type: str
                      lt:
                        description: Match only packets with a lower port number.
                        type: str
                      neq:
                        description: Match only packets not on a given port number.
                        type: str
                      range:
                        description: Port range operator
                        type: dict
                        suboptions:
                          start:
                            description: Specify the start of the port range.
                            type: int
                          end:
                            description: Specify the end of the port range.
                            type: int
              inactive:
                description: Keyword for disabling an ACL element.
                type: bool
              log:
                description: Log matches against this entry.
                type: str
                choices:
                  - default
                  - alerts
                  - critical
                  - debugging
                  - disable
                  - emergencies
                  - errors
                  - informational
                  - interval
                  - notifications
                  - warnings
              time_range:
                description: Specify a time-range.
                type: str
  running_config:
    description:
      - The module, by default, will connect to the remote device and
        retrieve the current running-config to use as a base for comparing
        against the contents of source. There are times when it is not
        desirable to have the task get the current running-config for
        every task in a playbook.  The I(running_config) argument allows the
        implementer to pass in the configuration to use as the base
        config for comparison.
    type: str
  state:
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    - gathered
    - rendered
    - parsed
    default: merged
    description:
    - The state of the configuration after module completion
    type: str
"""

EXAMPLES = """
---
# Using merged
# Before state:
# -------------
#
# vasa#sh access-lists

- name: Merge provided configuration with device configuration
  asa_acl:
    config:
    state: merged
# After state:
# ------------
#
# vasa#sh access-lists


# Using replaced

# Before state:
# -------------
#
# vasa#sh access-lists


- name: Replaces device configuration of listed acl with provided configuration
  asa_acl:
    config:
    state: replaced
# After state:
# -------------
#
# vasa#sh access-lists

# Using overridden

# Before state:
# -------------
#
# vasa#sh access-lists


- name: Override device configuration of all acl with provided configuration
  asa_acl:
    config:
    state: overridden
# After state:
# -------------
#
# vasa#sh access-lists

# Using Deleted

# Before state:
# -------------
#
# vasa#sh access-lists

- name: "Delete module attributes of given acl (Note: This won't delete the interface itself)"
  asa_acl:
    config:
    state: deleted
# After state:
# -------------
#
# vasa#sh access-lists

# Using Deleted without any config passed
#"(NOTE: This will delete all of configured resource module attributes from each configured interface)"
# Before state:
# -------------
#
# vasa#sh access-lists

- name: "Delete module attributes of all acl (Note: This won't delete the interface itself)"
  asa_acl:
    state: deleted
# After state:
# -------------
#
# vasa#sh access-lists

"""

RETURN = """
before:
  description: The configuration as structured data prior to module invocation.
  returned: always
  type: list
  sample: The configuration returned will always be in the same format of the parameters above.
after:
  description: The configuration as structured data after module completion.
  returned: when changed
  type: list
  sample: The configuration returned will always be in the same format of the parameters above.
commands:
  description: The set of commands pushed to the remote device
  returned: always
  type: list
  sample: ['access-list global_access extended permit icmp any any echo']
"""

from ansible.module_utils.basic import AnsibleModule
from ansible.module_utils.network.asa.argspec.acl.acl import AclArgs
from ansible.module_utils.network.asa.config.acl.acl import Acl


def main():
    """
    Main entry point for module execution
    :returns: the result form module invocation
    """
    required_if = [('state', 'merged', ('config',)),
                   ('state', 'replaced', ('config',)),
                   ('state', 'overridden', ('config',))]
    mutually_exclusive = [('config', 'running_config')]

    module = AnsibleModule(argument_spec=AclArgs.argument_spec,
                           required_if=required_if,
                           mutually_exclusive=mutually_exclusive,
                           supports_check_mode=True)

    result = Acl(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
