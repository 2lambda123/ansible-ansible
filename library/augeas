#!/usr/bin/python -tt
# -*- coding: utf-8 -*-

# (c) 2013, Tomasz Rybarczyk <paluho@gmail.com>
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
#

DOCUMENTATION = '''
---
module: augeas
author: Tomasz Rybarczyk
short_description: Augeas support
description:
  - Augeas module which exposes simple API for "match", "set" and "rm"
version_added: "1.1"
requirements:
  - augeas + lenses (augeas-lenses on Debian)
  - augeas python bindings (python-augeas on Debian)
options:
  path:
    required: true
    description:
      - 'Variable path.'
  value:
    required: false
    description:
      - 'Variable value (required for "set" command).'
  root:
    required: false
    description:
      - 'The filesystem root - config files are searched realtively to this path (fallbacks to AUGEAS_ROOT or /).'
  loadpath:
    required: false
    description:
      - 'Colon-spearated list of directories that modules should be searched in.'
  command:
    required: false
    default: "set"
    choices: [ set, rm, match ]
    description:
      - 'Whether given path should be modified, removed or matched. Command "match" passes results through "matches" attribute. Every item on this list is an object with "label" and "value" (check third example below).'
examples:
  - code: 'augeas: path=/files/etc/sudoers/spec[user=admin]/host_group/command/tag value=PASSWD'
    description: 'Simple value change'

  - code: |
      -action: augeas command="set" path="/files/etc/ssh/sshd_config/${item.path}" value="${item.value}"
       with_items:
         - path: 'PermitRootLogin'
           value: 'no'
         - path: 'PasswordAuthentication'
           value: 'no'
    description: 'Multiple values change with loop'

  - code: |
      - name: Fetch users list from sshd_config
        action: augeas command='match' path='/files/etc/ssh/sshd_config/AllowUsers/*'
        register: allow_users
      - name: Allow user to login through ssh
        action: augeas command="set" path="/files/etc/ssh/sshd_config/AllowUsers/01" value="${user}"
        only_if: "'${user}' not in [m['value'] for m in ${allow_users.matches}]"
    description: "Quite complex modification - fetch values lists and append new value only if it doesn't exists already in config"
'''


_missing = object()

def main():
    module = AnsibleModule(
        argument_spec = dict(
            loadpath = dict(default=None),
            root = dict(default=None),
            command=dict(default='set', choices=['set', 'rm', 'match']),
            path = dict(required=True, aliases=['name']),
            value = dict(default=_missing),
        )
    )
    try:
        import augeas
    except ImportError:
        module.fail_json(msg='Could not import python augeas module.'
                             ' Please install augeas related packages and '
                             'augeas python bindings.')
    p = module.params
    a = augeas.Augeas(root=p['root'], loadpath=p['loadpath'])

    value = module.params['value']
    if (p['command'] == 'set') != (value is not _missing):
        module.fail_json(msg='You should use "value" argument for "set" command.')

    path = module.params['path']
    if a.get(path) == value:
        module.exit_json(changed=False)
    if p['command'] == 'rm':
        a.remove(path)
    elif p['command'] == 'match':
        matches = [{'label': s, 'value': a.get(s)} for s in a.match(path)]
        module.exit_json(changed=False, matches=matches)
    else:
        a.set(path, value)
    a.save()
    module.exit_json(changed=True)

# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>

main()
