#!/usr/bin/python
# -*- coding: utf-8 -*-

# (c) 2013, Epic Games, Inc.
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible. If not, see <http://www.gnu.org/licenses/>.
# This is a port of the ruby zabbix api found here:
# http://trac.red-tux.net/browser/ruby/api/zbx_api.rb
#

DOCUMENTATION = '''
---
module: zabbix_group
short_description: Creates Zabbix host groups.
description:
   - Creates Zabbix host groups if they don't already exist.
version_added: "1.6"
author: Tony Minfei Ding
requirements:
    - zabbix-api python module
options:
    server_url:
        description:
            - Url of Zabbix server, with protocol (http or https).
              C(url) is an alias for C(server_url).
        required: true
        default: null
        aliases: [ "url" ]
    login_user:
        description:
            - Zabbix user name.
        required: true
        default: null
    login_password:
        description:
            - Zabbix user password.
        required: true
        default: null
    host_groups:
        description:
            - List of host groups to create.
        required: true
'''

EXAMPLES = '''
- name: Create host groups in zabbix
  local_action:
    module: zabbix_host
    server_url: http://monitor.example.com
    login_user: username
    login_password: password
    host_groups:
      - Example group1
      - Example group2
'''


import random
import time
from ansible.module_utils.basic import *
try:
    from zabbix_api import ZabbixAPI
    from zabbix_api import Already_Exists
    HAS_ZABBIX_API = True
except ImportError:
    HAS_ZABBIX_API = False


class HostGroup(object):
    def __init__(self, module, zbx):
        self._module = module
        self._zapi = zbx

    # create host group if not exists
    def create_host_group(self, group_names):
        try:
            group_add_list = []
            for group_name in group_names:
                result = self._zapi.hostgroup.exists({'name': group_name})
                # sometimes will create some identical host groups in zabbix, maybe a bug in zabbix
                for i in range(0, 3):
                    if not result:
                        time.sleep(random.randint(1, 5))
                        result = self._zapi.hostgroup.exists({'name': group_name})
                if not result:
                    try:
                        self._zapi.hostgroup.create({'name': group_name})
                        group_add_list.append(group_name)
                    except Already_Exists:
                        return group_add_list
            return group_add_list
        except Exception, e:
            self._module.fail_json(msg="Failed to create host group(s): %s" % e)

    def get_group_ids(self, group_names):
        group_ids = []
        group_name_list = group_names.split(",")

        group_list = self._zapi.hostgroup.get({'output': 'extend', 'filter': {'name': group_name_list}})
        for group in group_list:
            group_id = group['groupid']
            group_ids.append(group_id)
        return group_ids


def main():
    module = AnsibleModule(
        argument_spec=dict(
            server_url=dict(required=True, default=None, aliases=['url']),
            login_user=dict(required=True),
            login_password=dict(required=True),
            host_groups=dict(required=True)
        ),
        supports_check_mode=True,
    )

    if not HAS_ZABBIX_API:
        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")

    server_url = module.params['server_url']
    login_user = module.params['login_user']
    login_password = module.params['login_password']
    host_groups = module.params['host_groups']

    zbx = None
    # login to zabbix
    try:
        zbx = ZabbixAPI(server_url)
        zbx.login(login_user, login_password)
    except Exception, e:
        module.fail_json(msg="Failed to connect to Zabbix server: %s" % e)
    hostGroup = HostGroup(module, zbx)
    group_add_list = hostGroup.create_host_group(host_groups)
    if len(group_add_list) > 0:
        module.exit_json(changed=True, result="Successfully create host group(s): %s" % group_add_list)
    else:
        module.exit_json(changed=False)

# include magic from lib/ansible/module_common.py
# <<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
