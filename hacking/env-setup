#!/bin/bash
# usage: source ./hacking/env-setup [-q]
#    modifies environment for running Ansible from checkout

# When run using source as directed, $0 gets set to bash, so we must use $BASH_SOURCE
if [ -n "$BASH_SOURCE" ] ; then
    HACKING_DIR=`dirname $BASH_SOURCE`
else
    HACKING_DIR="$PWD/hacking"
fi
# The below is an alternative to readlink -fn which doesn't exist on OS X
# Source: http://stackoverflow.com/a/1678636
FULL_PATH=`python -c "import os; print(os.path.realpath('$HACKING_DIR'))"`
ANSIBLE_HOME=`dirname "$FULL_PATH"`

PREFIX_PYTHONPATH="$ANSIBLE_HOME/lib"
PREFIX_PATH="$ANSIBLE_HOME/bin"
PREFIX_MANPATH="$ANSIBLE_HOME/docs/man"

[[ $PYTHONPATH != ${PREFIX_PYTHONPATH}* ]] && export PYTHONPATH=$PREFIX_PYTHONPATH:$PYTHONPATH
[[ $PATH != ${PREFIX_PATH}* ]] && export PATH=$PREFIX_PATH:$PATH
export ANSIBLE_LIBRARY="$ANSIBLE_HOME/library"
[[ $MANPATH != ${PREFIX_MANPATH}* ]] && export MANPATH=$PREFIX_MANPATH:$MANPATH

for i in hosts inventory; do
    hostsfile=$HACKING_DIR/$i
    if [ -r "$hostsfile" ]; then
        export ANSIBLE_HOSTS=$hostsfile
        break
    fi
done

# Print out values unless -q is set

if [ $# -eq 0 -o "$1" != "-q" ] ; then
    echo ""
    echo "Setting up Ansible to run out of checkout..."
    echo ""
    echo "PATH=$PATH"
    echo "PYTHONPATH=$PYTHONPATH"
    echo "ANSIBLE_LIBRARY=$ANSIBLE_LIBRARY"
    echo "MANPATH=$MANPATH"
    if [ -n "$ANSIBLE_HOSTS" ]; then
        echo "ANSIBLE_HOSTS=$ANSIBLE_HOSTS"
        echo "(you can override this and specify a different host file with -i)"
    else
        echo ""
        echo "Remember, you may wish to specify your host file with -i"
    fi
    echo ""
    echo "Done!"
    echo ""
fi
