# usage: source hacking/env-setup [-q]
#    modifies environment for running Ansible from checkout

# Default values for shell variables we use
PYTHONPATH=${PYTHONPATH-""}
PATH=${PATH-""}
MANPATH=${MANPATH-""}
PYTHON=$(which python 2>/dev/null || which python3 2>/dev/null)
PYTHON_BIN=${PYTHON_BIN-$PYTHON}

verbosity=info # Defaults to `info' if unspecified
background=no

for opt in "$@"; do
    case $opt in
      -q ) verbosity=silent ;;
      -b ) background=yes ;;
    esac
done

# When run using source as directed, $0 gets set to bash, so we must use $BASH_SOURCE
if [ -n "$BASH_SOURCE" ] ; then
    HACKING_DIR=$(dirname "$BASH_SOURCE")
elif [ $(basename -- "$0") = "env-setup" ]; then
    HACKING_DIR=$(dirname "$0")
# Works with ksh93 but not pdksh, have to eval to keep ash happy...
elif [ -n "$KSH_VERSION" ] && echo $KSH_VERSION | grep -qv '^@(#)PD KSH'; then
    eval "HACKING_DIR=\$(dirname \"\${.sh.file}\")"
else
    HACKING_DIR="$PWD/hacking"
fi
# The below is an alternative to readlink -fn which doesn't exist on OS X
# Source: http://stackoverflow.com/a/1678636
FULL_PATH=$($PYTHON_BIN -c "import os; print(os.path.realpath('$HACKING_DIR'))")
export ANSIBLE_HOME="$(dirname "$FULL_PATH")"

PREFIX_PYTHONPATH="$ANSIBLE_HOME/lib"
PREFIX_PATH="$ANSIBLE_HOME/bin"
PREFIX_MANPATH="$ANSIBLE_HOME/docs/man"

expr "$PYTHONPATH" : "${PREFIX_PYTHONPATH}" > /dev/null || export PYTHONPATH="$PREFIX_PYTHONPATH:$PYTHONPATH"
expr "$PATH" : "${PREFIX_PATH}" > /dev/null || export PATH="$PREFIX_PATH:$PATH"
expr "$MANPATH" : "${PREFIX_MANPATH}" > /dev/null || export MANPATH="$PREFIX_MANPATH:$MANPATH"

#
# Generate egg_info so that pkg_resources works
#

# Do the work in a function so we don't repeat ourselves later
gen_egg_info()
{
    if [ -e "$PREFIX_PYTHONPATH/ansible.egg-info" ] ; then
       \rm -rf "$PREFIX_PYTHONPATH/ansible.egg-info"
    fi
    $PYTHON_BIN setup.py egg_info
}

(
	cd "$ANSIBLE_HOME"
	if [ "$verbosity" = silent ] ; then
	    # In silent mode run in background just to speed up sourcing this file
	    (gen_egg_info; 
             find . -type f -name "*.pyc" -exec rm -f {} \; ) > /dev/null 2>&1 &
	else
	    gen_egg_info # still in foreground since it prints output
            find . -type f -name "*.pyc" -exec rm -f {} \; &
	fi
)

if [ "$verbosity" != silent ] ; then
    cat <<- EOF
	
	Setting up Ansible to run out of checkout...
	
	PATH=$PATH
	PYTHONPATH=$PYTHONPATH
	MANPATH=$MANPATH
	
	Remember, you may wish to specify your host file with -i
	
	Done!
	
	EOF
fi

if [ $background = no ]; then
  wait >/dev/null 2>&1
fi

unset PREFIX_PATH PREFIX_MANPATH PREFIX_PYTHONPATH HACKING_DIR PYTHON FULL_PATH verbosity background
