{
  "description": [
    "Assembles a configuration file from fragments. Often a particular program will take a single configuration file and does not support a C(conf.d) style structure where it is easy to build up the configuration from multiple sources. Assemble will take a directory of files that have already been transferred to the system, and concatenate them together to produce a destination file. Files are assembled in string sorting order. Puppet calls this idea I(fragments)."
  ], 
  "module": "assemble", 
  "examples": [
    {
      "code": "assemble src=/etc/someapp/fragments dest=/etc/someapp/someapp.conf", 
      "description": "Example from Ansible Playbooks"
    }
  ], 
  "docuri": "assemble", 
  "author": "Stephen Fromm", 
  "filename": "library/assemble", 
  "version_added": "0.5", 
  "short_description": "Assembles a configuration file from fragments", 
  "now_date": "2012-10-09", 
  "options": {
    "dest": {
      "default": null, 
      "required": true, 
      "description": [
        "A file to create using the concatenation of all of the source files."
      ]
    }, 
    "src": {
      "default": null, 
      "required": true, 
      "description": [
        "An already existing directory full of source files."
      ], 
      "aliases": []
    }, 
    "backup": {
      "default": "no", 
      "required": false, 
      "description": [
        "Create a backup file (if C(yes)), including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
      ], 
      "choices": [
        "yes", 
        "no"
      ]
    }, 
    "others": {
      "required": false, 
      "description": [
        "all arguments accepted by the M(file) module also work here"
      ]
    }
  }, 
  "ansible_version": "0.8"
}